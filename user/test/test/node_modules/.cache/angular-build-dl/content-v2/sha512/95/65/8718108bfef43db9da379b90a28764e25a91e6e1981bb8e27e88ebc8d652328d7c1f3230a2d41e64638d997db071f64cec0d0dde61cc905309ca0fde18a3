{"version":3,"sources":["webpack:///node_modules/agm-direction/__ivy_ngcc__/fesm2015/agm-direction.js"],"names":["AgmDirection","gmapsApi","waypoints","optimizeWaypoints","provideRouteAlternatives","avoidHighways","avoidTolls","avoidFerries","visible","onChange","onResponse","sendInfoWindow","status","originDrag","destinationDrag","waypointsMarker","isFirstChange","directionDraw","obj","removeMarkers","removeDirections","e","directionsRenderer","renderOptions","firstChange","destroyMarkers","getNativeMap","then","_map","map","google","maps","DirectionsRenderer","setMap","addListener","emit","getDirections","directionsService","DirectionsService","panel","setPanel","renderRoute","setDirections","undefined","route","origin","destination","travelMode","TravelMode","DRIVING","transitOptions","drivingOptions","unitSystem","response","DirectionsStatus","OK","markerOptions","_route","routes","legs","position","start_location","originMarker","setMarker","start_address","draggable","end_location","destinationMarker","end_address","forEach","waypoint","index","Array","isArray","via_waypoints","push","err","console","error","OVER_QUERY_LIMIT","warn","marker","markerOpts","content","infoWindow","InfoWindow","Marker","getClickable","infowindoContent","setContent","open","w","event","clearListeners","ɵfac","AgmDirection_Factory","t","ɵdir","type","selectors","inputs","outputs","features","ctorParameters","propDecorators","ngDevMode","args","selector","AgmDirectionModule","ngModule","AgmDirectionModule_Factory","ɵmod","ɵinj","ngJitMode","declarations","exports"],"mappings":"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","file":"default~pages-cart-cart-module~pages-home-home-module~pages-track-track-module-es5.js","sourcesContent":["/**\n * @license agm-direction\n * MIT license\n */\n\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@agm/core';\nclass AgmDirection {\r\n    constructor(gmapsApi) {\r\n        this.gmapsApi = gmapsApi;\r\n        this.waypoints = [];\r\n        this.optimizeWaypoints = true;\r\n        this.provideRouteAlternatives = false;\r\n        this.avoidHighways = false;\r\n        this.avoidTolls = false;\r\n        this.avoidFerries = false;\r\n        // Remove or draw direction\r\n        this.visible = true;\r\n        // Direction change event handler\r\n        this.onChange = new EventEmitter();\r\n        // Direction response for the new request\r\n        this.onResponse = new EventEmitter();\r\n        // Send a custom infowindow\r\n        this.sendInfoWindow = new EventEmitter();\r\n        // Status of Directions Query (google.maps.DirectionsStatus.OVER_QUERY_LIMIT)\r\n        this.status = new EventEmitter();\r\n        // Marker drag event handler\r\n        this.originDrag = new EventEmitter();\r\n        this.destinationDrag = new EventEmitter();\r\n        this.waypointsMarker = [];\r\n        // Use for visible flag\r\n        this.isFirstChange = true;\r\n    }\r\n    ngOnInit() {\r\n        if (this.visible === true) {\r\n            this.directionDraw();\r\n        }\r\n    }\r\n    ngOnChanges(obj) {\r\n        /**\r\n         * When visible is false then remove the direction layer\r\n         */\r\n        if (!this.visible) {\r\n            try {\r\n                this.removeMarkers();\r\n                this.removeDirections();\r\n            }\r\n            catch (e) { }\r\n        }\r\n        else {\r\n            if (this.isFirstChange) {\r\n                /**\r\n                 * When visible is false at the first time\r\n                 */\r\n                if (typeof this.directionsRenderer === 'undefined') {\r\n                    this.directionDraw();\r\n                }\r\n                this.isFirstChange = false;\r\n                return;\r\n            }\r\n            /**\r\n             * When renderOptions are not first change then reset the display\r\n             */\r\n            if (typeof obj.renderOptions !== 'undefined') {\r\n                if (obj.renderOptions.firstChange === false) {\r\n                    this.removeMarkers();\r\n                    this.removeDirections();\r\n                }\r\n            }\r\n            this.directionDraw();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyMarkers();\r\n        this.removeDirections();\r\n    }\r\n    /**\r\n     * This event is fired when the user creating or updating this direction\r\n     */\r\n    directionDraw() {\r\n        this.gmapsApi.getNativeMap().then(_map => {\r\n            const map = _map;\r\n            if (typeof this.directionsRenderer === 'undefined') {\r\n                this.directionsRenderer = new google.maps.DirectionsRenderer(this.renderOptions);\r\n                // @ts-ignore\r\n                this.directionsRenderer.setMap(map);\r\n                this.directionsRenderer.addListener('directions_changed', () => {\r\n                    this.onChange.emit(this.directionsRenderer.getDirections());\r\n                });\r\n            }\r\n            if (typeof this.directionsService === 'undefined') {\r\n                this.directionsService = new google.maps.DirectionsService();\r\n            }\r\n            if (typeof this.panel === 'undefined') {\r\n                // @ts-ignore\r\n                this.directionsRenderer.setPanel(null);\r\n            }\r\n            else {\r\n                this.directionsRenderer.setPanel(this.panel);\r\n            }\r\n            // Render exist direction\r\n            if (this.renderRoute) {\r\n                this.directionsRenderer.setDirections(this.renderRoute);\r\n                this.renderRoute = undefined;\r\n            }\r\n            else {\r\n                // Request new direction\r\n                this.directionsService.route({\r\n                    origin: this.origin,\r\n                    destination: this.destination,\r\n                    travelMode: this.travelMode || google.maps.TravelMode.DRIVING,\r\n                    transitOptions: this.transitOptions,\r\n                    drivingOptions: this.drivingOptions,\r\n                    waypoints: this.waypoints,\r\n                    optimizeWaypoints: this.optimizeWaypoints,\r\n                    provideRouteAlternatives: this.provideRouteAlternatives,\r\n                    avoidHighways: this.avoidHighways,\r\n                    avoidTolls: this.avoidTolls,\r\n                    avoidFerries: this.avoidFerries,\r\n                    unitSystem: this.unitSystem,\r\n                }, (response, status) => {\r\n                    this.onResponse.emit(response);\r\n                    // Emit Query Status\r\n                    this.status.emit(status);\r\n                    /**\r\n                     * DirectionsStatus\r\n                     * https://developers.google.com/maps/documentation/javascript/directions#DirectionsStatus\r\n                     */\r\n                    switch (status) {\r\n                        case google.maps.DirectionsStatus.OK:\r\n                            this.directionsRenderer.setDirections(response);\r\n                            /**\r\n                             * Emit The DirectionsResult Object\r\n                             * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\r\n                             */\r\n                            // Custom Markers\r\n                            if (typeof this.markerOptions !== 'undefined') {\r\n                                this.destroyMarkers();\r\n                                // Set custom markers\r\n                                const _route = response.routes[0].legs[0];\r\n                                try {\r\n                                    // Origin Marker\r\n                                    if (typeof this.markerOptions.origin !== 'undefined') {\r\n                                        this.markerOptions.origin.map = map;\r\n                                        this.markerOptions.origin.position = _route.start_location;\r\n                                        this.originMarker = this.setMarker(map, this.originMarker, this.markerOptions.origin, _route.start_address);\r\n                                        if (this.markerOptions.origin.draggable) {\r\n                                            this.originMarker.addListener('dragend', () => {\r\n                                                this.origin = this.originMarker.position;\r\n                                                this.directionDraw();\r\n                                                this.originDrag.emit(this.origin);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    // Destination Marker\r\n                                    if (typeof this.markerOptions.destination !== 'undefined') {\r\n                                        this.markerOptions.destination.map = map;\r\n                                        this.markerOptions.destination.position = _route.end_location;\r\n                                        this.destinationMarker = this.setMarker(map, this.destinationMarker, this.markerOptions.destination, _route.end_address);\r\n                                        if (this.markerOptions.destination.draggable) {\r\n                                            this.destinationMarker.addListener('dragend', () => {\r\n                                                this.destination = this.destinationMarker.position;\r\n                                                this.directionDraw();\r\n                                                this.destinationDrag.emit(this.destination);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    // Waypoints Marker\r\n                                    if (typeof this.markerOptions.waypoints !== 'undefined') {\r\n                                        this.waypoints.forEach((waypoint, index) => {\r\n                                            // If waypoints are not array then set all the same\r\n                                            if (!Array.isArray(this.markerOptions.waypoints)) {\r\n                                                this.markerOptions.waypoints.map = map;\r\n                                                this.markerOptions.waypoints.position = _route.via_waypoints[index];\r\n                                                this.waypointsMarker.push(this.setMarker(map, waypoint, this.markerOptions.waypoints, _route.via_waypoints[index]));\r\n                                            }\r\n                                            else {\r\n                                                this.markerOptions.waypoints[index].map = map;\r\n                                                this.markerOptions.waypoints[index].position = _route.via_waypoints[index];\r\n                                                this.waypointsMarker.push(this.setMarker(map, waypoint, this.markerOptions.waypoints[index], _route.via_waypoints[index]));\r\n                                            }\r\n                                        }); // End forEach\r\n                                    }\r\n                                }\r\n                                catch (err) {\r\n                                    console.error('MarkerOptions error.', err);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case google.maps.DirectionsStatus.OVER_QUERY_LIMIT:\r\n                            console.warn('The webpage has sent too many requests within the allowed time period.');\r\n                            break;\r\n                        default:\r\n                            // console.warn(status);\r\n                            break;\r\n                    } // End switch\r\n                });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Custom Origin and Destination Icon\r\n     * @param map map\r\n     * @param marker marker\r\n     * @param markerOpts properties\r\n     * @param content marker's infowindow content\r\n     * @returns new marker\r\n     * @memberof AgmDirection\r\n     */\r\n    setMarker(map, marker, markerOpts, content) {\r\n        if (typeof this.infoWindow === 'undefined') {\r\n            this.infoWindow = new google.maps.InfoWindow();\r\n            this.sendInfoWindow.emit(this.infoWindow);\r\n        }\r\n        marker = new google.maps.Marker(markerOpts);\r\n        // https://developers.google.com/maps/documentation/javascript/reference/marker?hl=zh-tw#MarkerOptions.clickable\r\n        if (marker.getClickable()) {\r\n            marker.addListener('click', () => {\r\n                const infowindoContent = typeof markerOpts.infoWindow === 'undefined' ? content : markerOpts.infoWindow;\r\n                this.infoWindow.setContent(infowindoContent);\r\n                this.infoWindow.open(map, marker);\r\n            });\r\n        }\r\n        return marker;\r\n    }\r\n    /**\r\n     * This event is fired when remove markers\r\n     */\r\n    removeMarkers() {\r\n        if (typeof this.originMarker !== 'undefined') {\r\n            this.originMarker.setMap(null);\r\n        }\r\n        if (typeof this.destinationMarker !== 'undefined') {\r\n            this.destinationMarker.setMap(null);\r\n        }\r\n        this.waypointsMarker.forEach((w) => {\r\n            if (typeof w !== 'undefined') {\r\n                w.setMap(null);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * This event is fired when remove directions\r\n     */\r\n    removeDirections() {\r\n        if (this.directionsRenderer !== undefined) {\r\n            // @ts-ignore\r\n            this.directionsRenderer.setPanel(null);\r\n            this.directionsRenderer.setMap(null);\r\n            // @ts-ignore\r\n            this.directionsRenderer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * This event is fired when destroy markers\r\n     */\r\n    destroyMarkers() {\r\n        // Remove origin markers\r\n        try {\r\n            if (typeof this.originMarker !== 'undefined') {\r\n                google.maps.event.clearListeners(this.originMarker, 'click');\r\n                if (this.markerOptions.origin.draggable) {\r\n                    google.maps.event.clearListeners(this.originMarker, 'dragend');\r\n                }\r\n            }\r\n            if (typeof this.destinationMarker !== 'undefined') {\r\n                google.maps.event.clearListeners(this.destinationMarker, 'click');\r\n                if (this.markerOptions.origin.draggable) {\r\n                    google.maps.event.clearListeners(this.destinationMarker, 'dragend');\r\n                }\r\n            }\r\n            this.waypointsMarker.forEach((w) => {\r\n                if (typeof w !== 'undefined') {\r\n                    google.maps.event.clearListeners(w, 'click');\r\n                }\r\n            });\r\n            this.removeMarkers();\r\n        }\r\n        catch (err) {\r\n            console.error('Can not reset custom marker.', err);\r\n        }\r\n    }\r\n}\nAgmDirection.ɵfac = function AgmDirection_Factory(t) { return new (t || AgmDirection)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.GoogleMapsAPIWrapper)); };\nAgmDirection.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmDirection, selectors: [[\"agm-direction\"]], inputs: { waypoints: \"waypoints\", optimizeWaypoints: \"optimizeWaypoints\", provideRouteAlternatives: \"provideRouteAlternatives\", avoidHighways: \"avoidHighways\", avoidTolls: \"avoidTolls\", avoidFerries: \"avoidFerries\", visible: \"visible\", renderRoute: \"renderRoute\", origin: \"origin\", destination: \"destination\", infoWindow: \"infoWindow\", travelMode: \"travelMode\", transitOptions: \"transitOptions\", drivingOptions: \"drivingOptions\", unitSystem: \"unitSystem\", renderOptions: \"renderOptions\", panel: \"panel\", markerOptions: \"markerOptions\" }, outputs: { onChange: \"onChange\", onResponse: \"onResponse\", sendInfoWindow: \"sendInfoWindow\", status: \"status\", originDrag: \"originDrag\", destinationDrag: \"destinationDrag\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nAgmDirection.ctorParameters = () => [\r\n    { type: GoogleMapsAPIWrapper }\r\n];\r\nAgmDirection.propDecorators = {\r\n    origin: [{ type: Input }],\r\n    destination: [{ type: Input }],\r\n    travelMode: [{ type: Input }],\r\n    transitOptions: [{ type: Input }],\r\n    drivingOptions: [{ type: Input }],\r\n    waypoints: [{ type: Input }],\r\n    optimizeWaypoints: [{ type: Input }],\r\n    provideRouteAlternatives: [{ type: Input }],\r\n    avoidHighways: [{ type: Input }],\r\n    avoidTolls: [{ type: Input }],\r\n    avoidFerries: [{ type: Input }],\r\n    unitSystem: [{ type: Input }],\r\n    renderOptions: [{ type: Input }],\r\n    panel: [{ type: Input }],\r\n    markerOptions: [{ type: Input }],\r\n    infoWindow: [{ type: Input }],\r\n    visible: [{ type: Input }],\r\n    renderRoute: [{ type: Input }],\r\n    onChange: [{ type: Output }],\r\n    onResponse: [{ type: Output }],\r\n    sendInfoWindow: [{ type: Output }],\r\n    status: [{ type: Output }],\r\n    originDrag: [{ type: Output }],\r\n    destinationDrag: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmDirection, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-direction'\n            }]\n    }], function () { return [{ type: ɵngcc1.GoogleMapsAPIWrapper }]; }, { waypoints: [{\n            type: Input\n        }], optimizeWaypoints: [{\n            type: Input\n        }], provideRouteAlternatives: [{\n            type: Input\n        }], avoidHighways: [{\n            type: Input\n        }], avoidTolls: [{\n            type: Input\n        }], avoidFerries: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], onChange: [{\n            type: Output\n        }], onResponse: [{\n            type: Output\n        }], sendInfoWindow: [{\n            type: Output\n        }], status: [{\n            type: Output\n        }], originDrag: [{\n            type: Output\n        }], destinationDrag: [{\n            type: Output\n        }], renderRoute: [{\n            type: Input\n        }], origin: [{\n            type: Input\n        }], destination: [{\n            type: Input\n        }], infoWindow: [{\n            type: Input\n        }], travelMode: [{\n            type: Input\n        }], transitOptions: [{\n            type: Input\n        }], drivingOptions: [{\n            type: Input\n        }], unitSystem: [{\n            type: Input\n        }], renderOptions: [{\n            type: Input\n        }], panel: [{\n            type: Input\n        }], markerOptions: [{\n            type: Input\n        }] }); })();\n\nclass AgmDirectionModule {\r\n    static forRoot() {\r\n        return {\r\n            ngModule: AgmDirectionModule,\r\n        };\r\n    }\r\n    static forChild() {\r\n        return {\r\n            ngModule: AgmDirectionModule,\r\n        };\r\n    }\r\n}\nAgmDirectionModule.ɵfac = function AgmDirectionModule_Factory(t) { return new (t || AgmDirectionModule)(); };\nAgmDirectionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AgmDirectionModule });\nAgmDirectionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmDirectionModule, { declarations: [AgmDirection], exports: [AgmDirection] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AgmDirectionModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    AgmDirection,\n                ],\n                exports: [\n                    AgmDirection,\n                ]\n            }]\n    }], null, null); })();\n\n// Public classes.\n\n/**\r\n * Angular library starter\r\n * Build an Angular library compatible with AoT compilation & Tree shaking like an official package\r\n * Copyright Roberto Simonetti\r\n * MIT license\r\n * https://github.com/robisim74/angular-library-starter\r\n */\r\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AgmDirection, AgmDirectionModule };\n\n//# sourceMappingURL=agm-direction.js.map"]}