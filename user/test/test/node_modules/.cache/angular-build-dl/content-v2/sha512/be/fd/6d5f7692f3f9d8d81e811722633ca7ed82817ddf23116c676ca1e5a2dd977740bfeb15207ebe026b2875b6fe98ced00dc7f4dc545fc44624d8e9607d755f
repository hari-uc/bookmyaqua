(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-home-home-module"],{

/***/ "/rnz":
/*!*******************************************!*\
  !*** ./src/app/pages/home/home.page.scss ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("ion-content .fule_type {\n  height: 128px;\n  background-color: var(--white);\n  border-radius: 20px 20px 0px 0px;\n  box-shadow: 0px -1px 6px 0px rgba(0, 0, 0, 0.16);\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n}\nion-content .fule_type .fule {\n  text-align: center;\n  opacity: 0.5;\n}\nion-content .fule_type .fule .fule_lbl {\n  font-size: 18px;\n  font-family: \"rubik_md\";\n  color: var(--my_theme);\n  margin-bottom: 0;\n  margin-top: 5px;\n}\nion-content .fule_type .active {\n  opacity: 1;\n}\nion-content .map {\n  height: 100%;\n  width: 100%;\n}\nion-content input {\n  background: transparent;\n  border: none;\n  font-family: \"rubik_r\";\n  margin-left: 10px;\n  color: white;\n}\nion-content input:focus {\n  outline: none;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLGFBQUE7RUFDQSw4QkFBQTtFQUNBLGdDQUFBO0VBQ0EsZ0RBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsNkJBQUE7QUFBUjtBQUNRO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0FBQ1o7QUFBWTtFQUNJLGVBQUE7RUFDQSx1QkFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0FBRWhCO0FBQ1E7RUFDSSxVQUFBO0FBQ1o7QUFFSTtFQUNJLFlBQUE7RUFDQSxXQUFBO0FBQVI7QUFFSTtFQUNJLHVCQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsaUJBQUE7RUFDQSxZQUFBO0FBQVI7QUFFSTtFQUNJLGFBQUE7QUFBUiIsImZpbGUiOiJob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcclxuICAgIC5mdWxlX3R5cGUge1xyXG4gICAgICAgIGhlaWdodDogMTI4cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2hpdGUpO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHggMjBweCAwcHggMHB4O1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAtMXB4IDZweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICAuZnVsZSB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgICAgICAuZnVsZV9sYmwge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwicnViaWtfbWRcIjtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1teV90aGVtZSk7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5hY3RpdmUge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5tYXAge1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICAgIGlucHV0IHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdydWJpa19yJztcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB9XHJcbiAgICBpbnB1dDpmb2N1cyB7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgIH1cclxufSJdfQ== */");

/***/ }),

/***/ "99Un":
/*!*******************************************!*\
  !*** ./src/app/pages/home/home.module.ts ***!
  \*******************************************/
/*! exports provided: HomePageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomePageModule", function() { return HomePageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _environments_environment_prod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../environments/environment.prod */ "cxbk");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ "TEn/");
/* harmony import */ var _home_routing_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./home-routing.module */ "9oos");
/* harmony import */ var _home_page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./home.page */ "hsj+");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @agm/core */ "pxUr");
/* harmony import */ var agm_direction__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! agm-direction */ "IZFd");
/* harmony import */ var ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-google-places-autocomplete */ "7itd");
/* harmony import */ var ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_10__);











let HomePageModule = class HomePageModule {
};
HomePageModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["IonicModule"],
            _agm_core__WEBPACK_IMPORTED_MODULE_8__["AgmCoreModule"].forRoot({
                apiKey: _environments_environment_prod__WEBPACK_IMPORTED_MODULE_1__["environment"].google_map_key,
            }),
            agm_direction__WEBPACK_IMPORTED_MODULE_9__["AgmDirectionModule"],
            _home_routing_module__WEBPACK_IMPORTED_MODULE_6__["HomePageRoutingModule"],
            ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_10__["GooglePlaceModule"]
        ],
        declarations: [_home_page__WEBPACK_IMPORTED_MODULE_7__["HomePage"]],
    })
], HomePageModule);



/***/ }),

/***/ "9oos":
/*!***************************************************!*\
  !*** ./src/app/pages/home/home-routing.module.ts ***!
  \***************************************************/
/*! exports provided: HomePageRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomePageRoutingModule", function() { return HomePageRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _home_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./home.page */ "hsj+");




const routes = [
    {
        path: '',
        component: _home_page__WEBPACK_IMPORTED_MODULE_3__["HomePage"]
    }
];
let HomePageRoutingModule = class HomePageRoutingModule {
};
HomePageRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]],
    })
], HomePageRoutingModule);



/***/ }),

/***/ "eUf4":
/*!*********************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/home/home.page.html ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header class=\"ion-no-border\">\n    <ion-toolbar mode=\"md\">\n        <ion-buttons slot=\"start\">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Lofuel</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <agm-map [styles]=\"styles\" [latitude]=\"latitude\" [longitude]=\"longitude\" [disableDefaultUI]=\"true\">\n        <agm-marker [latitude]=\"latitude\" [longitude]=\"longitude\" [iconUrl]=\"iconUrl\"></agm-marker>\n    </agm-map>\n    <div class=\"location_div\">\n        <h3 class=\"loc_lbl\">Delivery Location</h3>\n        <div class=\"input_div\">\n            <ion-icon src=\"../../../assets/image_icon/location.svg\"></ion-icon>\n            <input autofocus=\"true\" ngx-google-places-autocomplete value=\"{{address}}\" #placesref=\"ngx-places\" (onAddressChange)=\"handleAddressChange($event)\">\n        </div>\n    </div>\n\n    <div class=\"fule_type\">\n        <div class=\"fule\" *ngFor=\"let item of data?.fuel_type\" (click)=\"getData(item)\" [class.active]=\"select == item.name\">\n            <img src=\"{{item?.imageUri}}\" alt=\"\" srcset=\"\">\n            <p class=\"fule_lbl\">{{item?.name}}</p>\n        </div>\n    </div>\n</ion-content>");

/***/ }),

/***/ "hsj+":
/*!*****************************************!*\
  !*** ./src/app/pages/home/home.page.ts ***!
  \*****************************************/
/*! exports provided: HomePage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomePage", function() { return HomePage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_home_page_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./home.page.html */ "eUf4");
/* harmony import */ var _home_page_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./home.page.scss */ "/rnz");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic-native/native-geocoder/ngx */ "h+qT");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ "TEn/");
/* harmony import */ var ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-google-places-autocomplete */ "7itd");
/* harmony import */ var ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var src_app_services_api_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/api.service */ "H+bZ");
/* harmony import */ var src_app_services_util_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/util.service */ "2Rin");
/* harmony import */ var _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ionic-native/geolocation/ngx */ "Bfh1");
/* harmony import */ var _ionic_native_diagnostic_ngx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ionic-native/diagnostic/ngx */ "mtRb");
/* harmony import */ var _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ionic-native/location-accuracy/ngx */ "92l+");
/* harmony import */ var _ionic_native_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ionic-native/android-permissions/ngx */ "WOgW");













let HomePage = class HomePage {
    constructor(nav, menu, util, api, nativeGeocoder, geolocation, diagnostic, alertCtrl, androidPermissions, locationAccuracy) {
        this.nav = nav;
        this.menu = menu;
        this.util = util;
        this.api = api;
        this.nativeGeocoder = nativeGeocoder;
        this.geolocation = geolocation;
        this.diagnostic = diagnostic;
        this.alertCtrl = alertCtrl;
        this.androidPermissions = androidPermissions;
        this.locationAccuracy = locationAccuracy;
        this.Centerlat = 22.298922;
        this.Centerlng = 70.802177;
        this.petrol = 1;
        this.diesel = 1;
        this.gas = 1;
        this.isshow = false;
        this.origin = {};
        this.destination = {};
        this.providerArray = [];
        this.icon = "../../../assets/image/sender_ic.png";
        this.iconUrl = "../../../assets/image/sender_ic.png";
        this.renderOptions = {
            suppressMarkers: true,
            draggable: false,
        };
        this.styles = [
            {
                elementType: "geometry",
                stylers: [
                    {
                        color: "#f5f5f5",
                    },
                ],
            },
            {
                elementType: "labels.icon",
                stylers: [
                    {
                        visibility: "off",
                    },
                ],
            },
            {
                elementType: "labels.text.fill",
                stylers: [
                    {
                        color: "#616161",
                    },
                ],
            },
            {
                elementType: "labels.text.stroke",
                stylers: [
                    {
                        color: "#f5f5f5",
                    },
                ],
            },
            {
                featureType: "administrative.land_parcel",
                elementType: "labels.text.fill",
                stylers: [
                    {
                        color: "#bdbdbd",
                    },
                ],
            },
            {
                featureType: "poi",
                elementType: "geometry",
                stylers: [
                    {
                        color: "#eeeeee",
                    },
                ],
            },
            {
                featureType: "poi",
                elementType: "labels.text.fill",
                stylers: [
                    {
                        color: "#757575",
                    },
                ],
            },
            {
                featureType: "poi.park",
                elementType: "geometry",
                stylers: [
                    {
                        color: "#e5e5e5",
                    },
                ],
            },
            {
                featureType: "poi.park",
                elementType: "labels.text.fill",
                stylers: [
                    {
                        color: "#9e9e9e",
                    },
                ],
            },
            {
                featureType: "road",
                elementType: "geometry",
                stylers: [
                    {
                        color: "#ffffff",
                    },
                ],
            },
            {
                featureType: "road.arterial",
                elementType: "labels.text.fill",
                stylers: [
                    {
                        color: "#757575",
                    },
                ],
            },
            {
                featureType: "road.highway",
                elementType: "geometry",
                stylers: [
                    {
                        color: "#dadada",
                    },
                ],
            },
            {
                featureType: "road.highway",
                elementType: "labels.text.fill",
                stylers: [
                    {
                        color: "#616161",
                    },
                ],
            },
            {
                featureType: "road.local",
                elementType: "labels.text.fill",
                stylers: [
                    {
                        color: "#9e9e9e",
                    },
                ],
            },
            {
                featureType: "transit.line",
                elementType: "geometry",
                stylers: [
                    {
                        color: "#e5e5e5",
                    },
                ],
            },
            {
                featureType: "transit.station",
                elementType: "geometry",
                stylers: [
                    {
                        color: "#eeeeee",
                    },
                ],
            },
            {
                featureType: "water",
                elementType: "geometry",
                stylers: [
                    {
                        color: "#c9c9c9",
                    },
                ],
            },
            {
                featureType: "water",
                elementType: "labels.text.fill",
                stylers: [
                    {
                        color: "#9e9e9e",
                    },
                ],
            },
        ];
        this.select = "";
        this.provider = [];
        this.geoencoderOptions = {
            useLocale: true,
            maxResults: 5,
        };
        this.locationData = {};
        setTimeout(() => {
            this.diagnostic
                .isLocationEnabled()
                .then((isAvailable) => {
                // console.log("Is available? " + isAvailable);
                // alert("Is available? " + isAvailable); 
                if (isAvailable == false) {
                    this.requestToSwitchOnGPS();
                }
            })
                .catch((e) => {
                console.log(e);
                alert(JSON.stringify(e));
            });
        }, 5000);
        this.locationCoords = {
            latitude: "",
            longitude: "",
            accuracy: "",
            timestamp: "",
        };
        this.menu.enable(true);
        setTimeout(() => {
            this.getLocationCoordinates();
            this.util.dismissLoading();
        }, 3000);
    }
    requestToSwitchOnGPS() {
        this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then((res) => {
            console.log('ask gps opermission', res);
            this.getLocationCoordinates();
        }, error => alert(JSON.stringify(error)));
    }
    gasPump() {
        this.isshow = true;
        if (this.isshow && this.gas == 1 && this.petrol == 0 && this.diesel == 0) {
            this.nav.navigateForward("pick-detail");
        }
    }
    getData(item) {
        this.util.dismissLoading();
        this.select = item.name;
        this.api.select_fuel = this.select;
        let temp = [];
        this.providerArray.push(item, this.provider);
        this.provider.forEach((element) => {
            let isPush = false;
            item.sub_fuel_type.forEach((sbt) => {
                if (element.fuel_type.includes(sbt.id) && !isPush) {
                    temp.push(element);
                    isPush = true;
                }
            });
        });
        if (item.sub_fuel_type.length == 0) {
            this.util.presentToast("No Fuel available! ");
        }
        else {
            localStorage.setItem("pro_id", item.id);
            this.util.dismissLoading();
            this.nav.navigateForward("pick-detail");
        }
    }
    checkGPSPermission() {
        this.androidPermissions
            .checkPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION)
            .then((result) => {
            if (result.hasPermission) {
                //If having permission show 'Turn On GPS' dialogue
                this.askToTurnOnGPS();
            }
            else {
                //If not having permission ask for permission
                this.requestGPSPermission();
            }
        }, (err) => {
            //alert(err);
        });
    }
    requestGPSPermission() {
        this.locationAccuracy.canRequest().then((canRequest) => {
            if (canRequest) {
                console.log("4");
            }
            else {
                //Show 'GPS Permission Request' dialogue
                this.androidPermissions
                    .requestPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION)
                    .then(() => {
                    // call method to turn on GPS
                    this.askToTurnOnGPS();
                }, (error) => {
                    //Show alert if user click on 'No Thanks'
                    alert("requestPermission Error requesting location permissions " +
                        error);
                });
            }
        });
    }
    askToTurnOnGPS() {
        this.locationAccuracy
            .request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY)
            .then(() => {
            // When GPS Turned ON call method to get Accurate location coordinates
            this.getLocationCoordinates();
        }, (error) => alert("Error requesting location permissions " + JSON.stringify(error)));
    }
    ngOnInit() { }
    get() {
        this.util.dismissLoading();
        this.getGeoencoder(this.latitude, this.longitude);
        localStorage.setItem("curentLat", JSON.stringify(this.latitude));
        localStorage.setItem("curentLang", JSON.stringify(this.longitude));
        localStorage.setItem("proLattt", JSON.stringify(this.latitude));
        localStorage.setItem("proLangg", JSON.stringify(this.longitude));
        localStorage.setItem("lat", JSON.stringify(this.latitude));
        localStorage.setItem("lang", JSON.stringify(this.longitude));
        this.api.lat = this.latitude;
        this.api.long = this.longitude;
        let data = {
            lat: this.latitude,
            lang: this.longitude,
            radius: 100,
        };
        this.util.presentLoading();
        this.api.postData("home", data).subscribe((success) => {
            this.util.dismissLoading();
            if (success.success) {
                this.data = success.data;
                this.provider = success.data.provider;
                this.select = success.data.fuel_type[1].name;
            }
        }, (err) => {
            this.util.dismissLoading();
        });
        this.zoom = 8;
        this.util.dismissLoading();
    }
    ionViewWillEnter() { }
    getDatas(lat, long) {
        const fd = new FormData();
        this.util.dismissLoading();
        fd.append("lat", lat);
        fd.append("lang", long);
        fd.append("radius", "1000");
        this.api.postData("home", fd).subscribe((success) => {
            this.util.dismissLoading();
            if (success.success) {
                this.data = success.data;
                this.provider = success.data.provider;
                this.select = success.data.fuel_type[1].name;
            }
        }, (err) => {
            this.util.dismissLoading();
        });
    }
    handleAddressChange(address) {
        this.util.dismissLoading();
        this.latitude = address.geometry.location.lat();
        this.longitude = address.geometry.location.lng();
        this.getGeoencoder(this.latitude, this.longitude);
        localStorage.setItem("curentLat", JSON.stringify(this.latitude));
        localStorage.setItem("curentLang", JSON.stringify(this.longitude));
        localStorage.setItem("proLattt", JSON.stringify(this.latitude));
        localStorage.setItem("proLangg", JSON.stringify(this.longitude));
        localStorage.setItem("lat", JSON.stringify(this.latitude));
        localStorage.setItem("lang", JSON.stringify(this.longitude));
        let dataOfAddress = {
            name: address.name,
            address: address.formatted_address,
        };
        localStorage.setItem("addressOfLast", dataOfAddress.address);
        localStorage.setItem("lat", JSON.stringify(this.latitude));
        localStorage.setItem("lang", JSON.stringify(this.longitude));
        this.util.dismissLoading();
    }
    getLocationCoordinates() {
        this.util.presentLoading();
        this.geolocation
            .getCurrentPosition()
            .then((resp) => {
            this.util.dismissLoading();
            this.locationCoords.latitude = resp.coords.latitude;
            this.locationCoords.longitude = resp.coords.longitude;
            this.locationCoords.accuracy = resp.coords.accuracy;
            this.locationCoords.timestamp = resp.timestamp;
            this.getGeoencoder(this.latitude, this.longitude);
            localStorage.setItem("curentLat", JSON.stringify(this.locationCoords.latitude));
            localStorage.setItem("curentLang", JSON.stringify(this.locationCoords.longitude));
            localStorage.setItem("proLattt", JSON.stringify(this.locationCoords.latitude));
            localStorage.setItem("proLangg", JSON.stringify(this.locationCoords.longitude));
            localStorage.setItem("lat", JSON.stringify(this.locationCoords.latitude));
            localStorage.setItem("lang", JSON.stringify(this.locationCoords.longitude));
            this.latitude = JSON.parse(this.locationCoords.latitude);
            this.longitude = JSON.parse(this.locationCoords.longitude);
            this.getDatas(this.locationCoords.latitude, this.locationCoords.longitude);
            this.api.lat = this.latitude;
            this.api.long = this.longitude;
            this.util.dismissLoading();
        })
            .catch((error) => {
            this.util.dismissLoading();
            alert("Error getting location" + error);
        });
    }
    getGeoencoder(latitude, longitude) {
        this.nativeGeocoder
            .reverseGeocode(latitude, longitude, this.geoencoderOptions)
            .then((result) => {
            this.util.dismissLoading();
            this.address = this.generateAddress(result[0]);
            localStorage.setItem("addressOfLast", this.address);
            localStorage.setItem("gene", this.address);
        })
            .catch((error) => {
            this.util.dismissLoading();
        });
    }
    //Return Comma saperated address
    generateAddress(addressObj) {
        this.util.dismissLoading();
        let obj = [];
        let address = "";
        for (let key in addressObj) {
            obj.push(addressObj[key]);
        }
        obj.reverse();
        for (let val in obj) {
            if (obj[val].length)
                address += obj[val] + ", ";
        }
        return address.slice(0, -2);
    }
    getPointFromLongLat(long, lat) {
        this.util.dismissLoading();
        return ol.proj.transform([long, lat], "EPSG:4326", "EPSG:3857");
    }
    markerDragEnd(event) {
        this.latitude = event.lat;
        this.util.dismissLoading();
    }
};
HomePage.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["NavController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["MenuController"] },
    { type: src_app_services_util_service__WEBPACK_IMPORTED_MODULE_8__["UtilService"] },
    { type: src_app_services_api_service__WEBPACK_IMPORTED_MODULE_7__["ApiService"] },
    { type: _ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_4__["NativeGeocoder"] },
    { type: _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_9__["Geolocation"] },
    { type: _ionic_native_diagnostic_ngx__WEBPACK_IMPORTED_MODULE_10__["Diagnostic"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["AlertController"] },
    { type: _ionic_native_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_12__["AndroidPermissions"] },
    { type: _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_11__["LocationAccuracy"] }
];
HomePage.propDecorators = {
    placesRef: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: ["placesRef", { static: false },] }],
    searchElementRef: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: ["search", { static: false },] }]
};
HomePage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-home",
        template: _raw_loader_home_page_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_home_page_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_5__["NavController"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["MenuController"],
        src_app_services_util_service__WEBPACK_IMPORTED_MODULE_8__["UtilService"],
        src_app_services_api_service__WEBPACK_IMPORTED_MODULE_7__["ApiService"],
        _ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_4__["NativeGeocoder"],
        _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_9__["Geolocation"],
        _ionic_native_diagnostic_ngx__WEBPACK_IMPORTED_MODULE_10__["Diagnostic"],
        _ionic_angular__WEBPACK_IMPORTED_MODULE_5__["AlertController"],
        _ionic_native_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_12__["AndroidPermissions"],
        _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_11__["LocationAccuracy"]])
], HomePage);



/***/ })

}]);
//# sourceMappingURL=pages-home-home-module-es2015.js.map