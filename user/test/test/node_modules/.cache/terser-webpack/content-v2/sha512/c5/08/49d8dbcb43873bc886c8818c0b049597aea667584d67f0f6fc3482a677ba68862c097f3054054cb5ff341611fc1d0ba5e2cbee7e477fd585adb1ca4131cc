{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{\"74mu\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return createColorClasses}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return getClassMap}),__webpack_require__.d(__webpack_exports__,\"c\",function(){return hostContext}),__webpack_require__.d(__webpack_exports__,\"d\",function(){return openURL});const hostContext=(selector,el)=>null!==el.closest(selector),createColorClasses=(color,cssClassMap)=>\"string\"==typeof color&&color.length>0?Object.assign({\"ion-color\":!0,[`ion-color-${color}`]:!0},cssClassMap):cssClassMap,getClassMap=classes=>{const map={};return(classes=>void 0!==classes?(Array.isArray(classes)?classes:classes.split(\" \")).filter(c=>null!=c).map(c=>c.trim()).filter(c=>\"\"!==c):[])(classes).forEach(c=>map[c]=!0),map},SCHEME=/^[a-z][a-z0-9+\\-.]*:/,openURL=async(url,ev,direction,animation)=>{if(null!=url&&\"#\"!==url[0]&&!SCHEME.test(url)){const router=document.querySelector(\"ion-router\");if(router)return null!=ev&&ev.preventDefault(),router.push(url,direction,animation)}return!1}},IZFd:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return AgmDirection}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return AgmDirectionModule});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"fXoL\"),_agm_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"pxUr\");let AgmDirection=(()=>{class AgmDirection{constructor(gmapsApi){this.gmapsApi=gmapsApi,this.waypoints=[],this.optimizeWaypoints=!0,this.provideRouteAlternatives=!1,this.avoidHighways=!1,this.avoidTolls=!1,this.avoidFerries=!1,this.visible=!0,this.onChange=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.onResponse=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.sendInfoWindow=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.status=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.originDrag=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.destinationDrag=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.waypointsMarker=[],this.isFirstChange=!0}ngOnInit(){!0===this.visible&&this.directionDraw()}ngOnChanges(obj){if(this.visible){if(this.isFirstChange)return void 0===this.directionsRenderer&&this.directionDraw(),void(this.isFirstChange=!1);void 0!==obj.renderOptions&&!1===obj.renderOptions.firstChange&&(this.removeMarkers(),this.removeDirections()),this.directionDraw()}else try{this.removeMarkers(),this.removeDirections()}catch(e){}}ngOnDestroy(){this.destroyMarkers(),this.removeDirections()}directionDraw(){this.gmapsApi.getNativeMap().then(_map=>{const map=_map;void 0===this.directionsRenderer&&(this.directionsRenderer=new google.maps.DirectionsRenderer(this.renderOptions),this.directionsRenderer.setMap(map),this.directionsRenderer.addListener(\"directions_changed\",()=>{this.onChange.emit(this.directionsRenderer.getDirections())})),void 0===this.directionsService&&(this.directionsService=new google.maps.DirectionsService),this.directionsRenderer.setPanel(void 0===this.panel?null:this.panel),this.renderRoute?(this.directionsRenderer.setDirections(this.renderRoute),this.renderRoute=void 0):this.directionsService.route({origin:this.origin,destination:this.destination,travelMode:this.travelMode||google.maps.TravelMode.DRIVING,transitOptions:this.transitOptions,drivingOptions:this.drivingOptions,waypoints:this.waypoints,optimizeWaypoints:this.optimizeWaypoints,provideRouteAlternatives:this.provideRouteAlternatives,avoidHighways:this.avoidHighways,avoidTolls:this.avoidTolls,avoidFerries:this.avoidFerries,unitSystem:this.unitSystem},(response,status)=>{switch(this.onResponse.emit(response),this.status.emit(status),status){case google.maps.DirectionsStatus.OK:if(this.directionsRenderer.setDirections(response),void 0!==this.markerOptions){this.destroyMarkers();const _route=response.routes[0].legs[0];try{void 0!==this.markerOptions.origin&&(this.markerOptions.origin.map=map,this.markerOptions.origin.position=_route.start_location,this.originMarker=this.setMarker(map,this.originMarker,this.markerOptions.origin,_route.start_address),this.markerOptions.origin.draggable&&this.originMarker.addListener(\"dragend\",()=>{this.origin=this.originMarker.position,this.directionDraw(),this.originDrag.emit(this.origin)})),void 0!==this.markerOptions.destination&&(this.markerOptions.destination.map=map,this.markerOptions.destination.position=_route.end_location,this.destinationMarker=this.setMarker(map,this.destinationMarker,this.markerOptions.destination,_route.end_address),this.markerOptions.destination.draggable&&this.destinationMarker.addListener(\"dragend\",()=>{this.destination=this.destinationMarker.position,this.directionDraw(),this.destinationDrag.emit(this.destination)})),void 0!==this.markerOptions.waypoints&&this.waypoints.forEach((waypoint,index)=>{Array.isArray(this.markerOptions.waypoints)?(this.markerOptions.waypoints[index].map=map,this.markerOptions.waypoints[index].position=_route.via_waypoints[index],this.waypointsMarker.push(this.setMarker(map,waypoint,this.markerOptions.waypoints[index],_route.via_waypoints[index]))):(this.markerOptions.waypoints.map=map,this.markerOptions.waypoints.position=_route.via_waypoints[index],this.waypointsMarker.push(this.setMarker(map,waypoint,this.markerOptions.waypoints,_route.via_waypoints[index])))})}catch(err){console.error(\"MarkerOptions error.\",err)}}break;case google.maps.DirectionsStatus.OVER_QUERY_LIMIT:console.warn(\"The webpage has sent too many requests within the allowed time period.\")}})})}setMarker(map,marker,markerOpts,content){return void 0===this.infoWindow&&(this.infoWindow=new google.maps.InfoWindow,this.sendInfoWindow.emit(this.infoWindow)),(marker=new google.maps.Marker(markerOpts)).getClickable()&&marker.addListener(\"click\",()=>{this.infoWindow.setContent(void 0===markerOpts.infoWindow?content:markerOpts.infoWindow),this.infoWindow.open(map,marker)}),marker}removeMarkers(){void 0!==this.originMarker&&this.originMarker.setMap(null),void 0!==this.destinationMarker&&this.destinationMarker.setMap(null),this.waypointsMarker.forEach(w=>{void 0!==w&&w.setMap(null)})}removeDirections(){void 0!==this.directionsRenderer&&(this.directionsRenderer.setPanel(null),this.directionsRenderer.setMap(null),this.directionsRenderer=void 0)}destroyMarkers(){try{void 0!==this.originMarker&&(google.maps.event.clearListeners(this.originMarker,\"click\"),this.markerOptions.origin.draggable&&google.maps.event.clearListeners(this.originMarker,\"dragend\")),void 0!==this.destinationMarker&&(google.maps.event.clearListeners(this.destinationMarker,\"click\"),this.markerOptions.origin.draggable&&google.maps.event.clearListeners(this.destinationMarker,\"dragend\")),this.waypointsMarker.forEach(w=>{void 0!==w&&google.maps.event.clearListeners(w,\"click\")}),this.removeMarkers()}catch(err){console.error(\"Can not reset custom marker.\",err)}}}return AgmDirection.ɵfac=function(t){return new(t||AgmDirection)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](_agm_core__WEBPACK_IMPORTED_MODULE_1__.d))},AgmDirection.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineDirective\"]({type:AgmDirection,selectors:[[\"agm-direction\"]],inputs:{waypoints:\"waypoints\",optimizeWaypoints:\"optimizeWaypoints\",provideRouteAlternatives:\"provideRouteAlternatives\",avoidHighways:\"avoidHighways\",avoidTolls:\"avoidTolls\",avoidFerries:\"avoidFerries\",visible:\"visible\",renderRoute:\"renderRoute\",origin:\"origin\",destination:\"destination\",infoWindow:\"infoWindow\",travelMode:\"travelMode\",transitOptions:\"transitOptions\",drivingOptions:\"drivingOptions\",unitSystem:\"unitSystem\",renderOptions:\"renderOptions\",panel:\"panel\",markerOptions:\"markerOptions\"},outputs:{onChange:\"onChange\",onResponse:\"onResponse\",sendInfoWindow:\"sendInfoWindow\",status:\"status\",originDrag:\"originDrag\",destinationDrag:\"destinationDrag\"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵNgOnChangesFeature\"]]}),AgmDirection})(),AgmDirectionModule=(()=>{class AgmDirectionModule{static forRoot(){return{ngModule:AgmDirectionModule}}static forChild(){return{ngModule:AgmDirectionModule}}}return AgmDirectionModule.ɵfac=function(t){return new(t||AgmDirectionModule)},AgmDirectionModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineNgModule\"]({type:AgmDirectionModule}),AgmDirectionModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjector\"]({}),AgmDirectionModule})()},Zcj0:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return createButtonActiveGesture});var _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"wEJo\"),_haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"qULd\"),_index_34cb2743_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"KF81\");const createButtonActiveGesture=(el,isButton)=>{let currentTouchedButton,initialTouchedButton;const activateButtonAtPoint=(x,y,hapticFeedbackFn)=>{if(\"undefined\"==typeof document)return;const target=document.elementFromPoint(x,y);target&&isButton(target)?target!==currentTouchedButton&&(clearActiveButton(),setActiveButton(target,hapticFeedbackFn)):clearActiveButton()},setActiveButton=(button,hapticFeedbackFn)=>{currentTouchedButton=button,initialTouchedButton||(initialTouchedButton=currentTouchedButton);const buttonToModify=currentTouchedButton;Object(_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.f)(()=>buttonToModify.classList.add(\"ion-activated\")),hapticFeedbackFn()},clearActiveButton=(dispatchClick=!1)=>{if(!currentTouchedButton)return;const buttonToModify=currentTouchedButton;Object(_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__.f)(()=>buttonToModify.classList.remove(\"ion-activated\")),dispatchClick&&initialTouchedButton!==currentTouchedButton&&currentTouchedButton.click(),currentTouchedButton=void 0};return Object(_index_34cb2743_js__WEBPACK_IMPORTED_MODULE_2__.createGesture)({el:el,gestureName:\"buttonActiveDrag\",threshold:0,onStart:ev=>activateButtonAtPoint(ev.currentX,ev.currentY,_haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__.a),onMove:ev=>activateButtonAtPoint(ev.currentX,ev.currentY,_haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__.b),onEnd:()=>{clearActiveButton(!0),Object(_haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__.e)(),initialTouchedButton=void 0}})}},h3R7:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return SPINNERS});const SPINNERS={bubbles:{dur:1e3,circles:9,fn:(dur,index,total)=>{const animationDelay=dur*index/total-dur+\"ms\",angle=2*Math.PI*index/total;return{r:5,style:{top:9*Math.sin(angle)+\"px\",left:9*Math.cos(angle)+\"px\",\"animation-delay\":animationDelay}}}},circles:{dur:1e3,circles:8,fn:(dur,index,total)=>{const step=index/total,animationDelay=dur*step-dur+\"ms\",angle=2*Math.PI*step;return{r:5,style:{top:9*Math.sin(angle)+\"px\",left:9*Math.cos(angle)+\"px\",\"animation-delay\":animationDelay}}}},circular:{dur:1400,elmDuration:!0,circles:1,fn:()=>({r:20,cx:48,cy:48,fill:\"none\",viewBox:\"24 24 48 48\",transform:\"translate(0,0)\",style:{}})},crescent:{dur:750,circles:1,fn:()=>({r:26,style:{}})},dots:{dur:750,circles:3,fn:(_,index)=>({r:6,style:{left:9-9*index+\"px\",\"animation-delay\":-110*index+\"ms\"}})},lines:{dur:1e3,lines:12,fn:(dur,index,total)=>({y1:17,y2:29,style:{transform:`rotate(${30*index+(index<6?180:-180)}deg)`,\"animation-delay\":dur*index/total-dur+\"ms\"}})},\"lines-small\":{dur:1e3,lines:12,fn:(dur,index,total)=>({y1:12,y2:20,style:{transform:`rotate(${30*index+(index<6?180:-180)}deg)`,\"animation-delay\":dur*index/total-dur+\"ms\"}})}}},qULd:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return hapticSelectionStart}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return hapticSelectionChanged}),__webpack_require__.d(__webpack_exports__,\"c\",function(){return hapticSelection}),__webpack_require__.d(__webpack_exports__,\"d\",function(){return hapticImpact}),__webpack_require__.d(__webpack_exports__,\"e\",function(){return hapticSelectionEnd});const HapticEngine={getEngine(){const win=window;return win.TapticEngine||win.Capacitor&&win.Capacitor.isPluginAvailable(\"Haptics\")&&win.Capacitor.Plugins.Haptics},available(){return!!this.getEngine()},isCordova:()=>!!window.TapticEngine,isCapacitor:()=>!!window.Capacitor,impact(options){const engine=this.getEngine();if(!engine)return;const style=this.isCapacitor()?options.style.toUpperCase():options.style;engine.impact({style:style})},notification(options){const engine=this.getEngine();if(!engine)return;const style=this.isCapacitor()?options.style.toUpperCase():options.style;engine.notification({style:style})},selection(){this.impact({style:\"light\"})},selectionStart(){const engine=this.getEngine();engine&&(this.isCapacitor()?engine.selectionStart():engine.gestureSelectionStart())},selectionChanged(){const engine=this.getEngine();engine&&(this.isCapacitor()?engine.selectionChanged():engine.gestureSelectionChanged())},selectionEnd(){const engine=this.getEngine();engine&&(this.isCapacitor()?engine.selectionEnd():engine.gestureSelectionEnd())}},hapticSelection=()=>{HapticEngine.selection()},hapticSelectionStart=()=>{HapticEngine.selectionStart()},hapticSelectionChanged=()=>{HapticEngine.selectionChanged()},hapticSelectionEnd=()=>{HapticEngine.selectionEnd()},hapticImpact=options=>{HapticEngine.impact(options)}},spDm:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return attachComponent}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return detachComponent});var _helpers_1457892a_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"W6o/\");const attachComponent=async(delegate,container,component,cssClasses,componentProps)=>{if(delegate)return delegate.attachViewToDom(container,component,componentProps,cssClasses);if(\"string\"!=typeof component&&!(component instanceof HTMLElement))throw new Error(\"framework delegate is missing\");const el=\"string\"==typeof component?container.ownerDocument&&container.ownerDocument.createElement(component):component;return cssClasses&&cssClasses.forEach(c=>el.classList.add(c)),componentProps&&Object.assign(el,componentProps),container.appendChild(el),await new Promise(resolve=>Object(_helpers_1457892a_js__WEBPACK_IMPORTED_MODULE_0__.c)(el,resolve)),el},detachComponent=(delegate,element)=>{if(element){if(delegate)return delegate.removeViewFromDom(element.parentElement,element);element.remove()}return Promise.resolve()}}}]);","name":"common-es2015.76874ab4516e5d878053.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[0],{\n\n/***/ \"74mu\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createColorClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getClassMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return hostContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return openURL; });\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\n\n\n\n/***/ }),\n\n/***/ \"IZFd\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmDirection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return AgmDirectionModule; });\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"pxUr\");\n/**\n * @license agm-direction\n * MIT license\n */\n\n\n\n\nlet AgmDirection = /*@__PURE__*/ (() => {\n    class AgmDirection {\n        constructor(gmapsApi) {\n            this.gmapsApi = gmapsApi;\n            this.waypoints = [];\n            this.optimizeWaypoints = true;\n            this.provideRouteAlternatives = false;\n            this.avoidHighways = false;\n            this.avoidTolls = false;\n            this.avoidFerries = false;\n            // Remove or draw direction\n            this.visible = true;\n            // Direction change event handler\n            this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n            // Direction response for the new request\n            this.onResponse = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n            // Send a custom infowindow\n            this.sendInfoWindow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n            // Status of Directions Query (google.maps.DirectionsStatus.OVER_QUERY_LIMIT)\n            this.status = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n            // Marker drag event handler\n            this.originDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n            this.destinationDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"EventEmitter\"]();\n            this.waypointsMarker = [];\n            // Use for visible flag\n            this.isFirstChange = true;\n        }\n        ngOnInit() {\n            if (this.visible === true) {\n                this.directionDraw();\n            }\n        }\n        ngOnChanges(obj) {\n            /**\n             * When visible is false then remove the direction layer\n             */\n            if (!this.visible) {\n                try {\n                    this.removeMarkers();\n                    this.removeDirections();\n                }\n                catch (e) { }\n            }\n            else {\n                if (this.isFirstChange) {\n                    /**\n                     * When visible is false at the first time\n                     */\n                    if (typeof this.directionsRenderer === 'undefined') {\n                        this.directionDraw();\n                    }\n                    this.isFirstChange = false;\n                    return;\n                }\n                /**\n                 * When renderOptions are not first change then reset the display\n                 */\n                if (typeof obj.renderOptions !== 'undefined') {\n                    if (obj.renderOptions.firstChange === false) {\n                        this.removeMarkers();\n                        this.removeDirections();\n                    }\n                }\n                this.directionDraw();\n            }\n        }\n        ngOnDestroy() {\n            this.destroyMarkers();\n            this.removeDirections();\n        }\n        /**\n         * This event is fired when the user creating or updating this direction\n         */\n        directionDraw() {\n            this.gmapsApi.getNativeMap().then(_map => {\n                const map = _map;\n                if (typeof this.directionsRenderer === 'undefined') {\n                    this.directionsRenderer = new google.maps.DirectionsRenderer(this.renderOptions);\n                    // @ts-ignore\n                    this.directionsRenderer.setMap(map);\n                    this.directionsRenderer.addListener('directions_changed', () => {\n                        this.onChange.emit(this.directionsRenderer.getDirections());\n                    });\n                }\n                if (typeof this.directionsService === 'undefined') {\n                    this.directionsService = new google.maps.DirectionsService();\n                }\n                if (typeof this.panel === 'undefined') {\n                    // @ts-ignore\n                    this.directionsRenderer.setPanel(null);\n                }\n                else {\n                    this.directionsRenderer.setPanel(this.panel);\n                }\n                // Render exist direction\n                if (this.renderRoute) {\n                    this.directionsRenderer.setDirections(this.renderRoute);\n                    this.renderRoute = undefined;\n                }\n                else {\n                    // Request new direction\n                    this.directionsService.route({\n                        origin: this.origin,\n                        destination: this.destination,\n                        travelMode: this.travelMode || google.maps.TravelMode.DRIVING,\n                        transitOptions: this.transitOptions,\n                        drivingOptions: this.drivingOptions,\n                        waypoints: this.waypoints,\n                        optimizeWaypoints: this.optimizeWaypoints,\n                        provideRouteAlternatives: this.provideRouteAlternatives,\n                        avoidHighways: this.avoidHighways,\n                        avoidTolls: this.avoidTolls,\n                        avoidFerries: this.avoidFerries,\n                        unitSystem: this.unitSystem,\n                    }, (response, status) => {\n                        this.onResponse.emit(response);\n                        // Emit Query Status\n                        this.status.emit(status);\n                        /**\n                         * DirectionsStatus\n                         * https://developers.google.com/maps/documentation/javascript/directions#DirectionsStatus\n                         */\n                        switch (status) {\n                            case google.maps.DirectionsStatus.OK:\n                                this.directionsRenderer.setDirections(response);\n                                /**\n                                 * Emit The DirectionsResult Object\n                                 * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\n                                 */\n                                // Custom Markers\n                                if (typeof this.markerOptions !== 'undefined') {\n                                    this.destroyMarkers();\n                                    // Set custom markers\n                                    const _route = response.routes[0].legs[0];\n                                    try {\n                                        // Origin Marker\n                                        if (typeof this.markerOptions.origin !== 'undefined') {\n                                            this.markerOptions.origin.map = map;\n                                            this.markerOptions.origin.position = _route.start_location;\n                                            this.originMarker = this.setMarker(map, this.originMarker, this.markerOptions.origin, _route.start_address);\n                                            if (this.markerOptions.origin.draggable) {\n                                                this.originMarker.addListener('dragend', () => {\n                                                    this.origin = this.originMarker.position;\n                                                    this.directionDraw();\n                                                    this.originDrag.emit(this.origin);\n                                                });\n                                            }\n                                        }\n                                        // Destination Marker\n                                        if (typeof this.markerOptions.destination !== 'undefined') {\n                                            this.markerOptions.destination.map = map;\n                                            this.markerOptions.destination.position = _route.end_location;\n                                            this.destinationMarker = this.setMarker(map, this.destinationMarker, this.markerOptions.destination, _route.end_address);\n                                            if (this.markerOptions.destination.draggable) {\n                                                this.destinationMarker.addListener('dragend', () => {\n                                                    this.destination = this.destinationMarker.position;\n                                                    this.directionDraw();\n                                                    this.destinationDrag.emit(this.destination);\n                                                });\n                                            }\n                                        }\n                                        // Waypoints Marker\n                                        if (typeof this.markerOptions.waypoints !== 'undefined') {\n                                            this.waypoints.forEach((waypoint, index) => {\n                                                // If waypoints are not array then set all the same\n                                                if (!Array.isArray(this.markerOptions.waypoints)) {\n                                                    this.markerOptions.waypoints.map = map;\n                                                    this.markerOptions.waypoints.position = _route.via_waypoints[index];\n                                                    this.waypointsMarker.push(this.setMarker(map, waypoint, this.markerOptions.waypoints, _route.via_waypoints[index]));\n                                                }\n                                                else {\n                                                    this.markerOptions.waypoints[index].map = map;\n                                                    this.markerOptions.waypoints[index].position = _route.via_waypoints[index];\n                                                    this.waypointsMarker.push(this.setMarker(map, waypoint, this.markerOptions.waypoints[index], _route.via_waypoints[index]));\n                                                }\n                                            }); // End forEach\n                                        }\n                                    }\n                                    catch (err) {\n                                        console.error('MarkerOptions error.', err);\n                                    }\n                                }\n                                break;\n                            case google.maps.DirectionsStatus.OVER_QUERY_LIMIT:\n                                console.warn('The webpage has sent too many requests within the allowed time period.');\n                                break;\n                            default:\n                                // console.warn(status);\n                                break;\n                        } // End switch\n                    });\n                }\n            });\n        }\n        /**\n         * Custom Origin and Destination Icon\n         * @param map map\n         * @param marker marker\n         * @param markerOpts properties\n         * @param content marker's infowindow content\n         * @returns new marker\n         * @memberof AgmDirection\n         */\n        setMarker(map, marker, markerOpts, content) {\n            if (typeof this.infoWindow === 'undefined') {\n                this.infoWindow = new google.maps.InfoWindow();\n                this.sendInfoWindow.emit(this.infoWindow);\n            }\n            marker = new google.maps.Marker(markerOpts);\n            // https://developers.google.com/maps/documentation/javascript/reference/marker?hl=zh-tw#MarkerOptions.clickable\n            if (marker.getClickable()) {\n                marker.addListener('click', () => {\n                    const infowindoContent = typeof markerOpts.infoWindow === 'undefined' ? content : markerOpts.infoWindow;\n                    this.infoWindow.setContent(infowindoContent);\n                    this.infoWindow.open(map, marker);\n                });\n            }\n            return marker;\n        }\n        /**\n         * This event is fired when remove markers\n         */\n        removeMarkers() {\n            if (typeof this.originMarker !== 'undefined') {\n                this.originMarker.setMap(null);\n            }\n            if (typeof this.destinationMarker !== 'undefined') {\n                this.destinationMarker.setMap(null);\n            }\n            this.waypointsMarker.forEach((w) => {\n                if (typeof w !== 'undefined') {\n                    w.setMap(null);\n                }\n            });\n        }\n        /**\n         * This event is fired when remove directions\n         */\n        removeDirections() {\n            if (this.directionsRenderer !== undefined) {\n                // @ts-ignore\n                this.directionsRenderer.setPanel(null);\n                this.directionsRenderer.setMap(null);\n                // @ts-ignore\n                this.directionsRenderer = undefined;\n            }\n        }\n        /**\n         * This event is fired when destroy markers\n         */\n        destroyMarkers() {\n            // Remove origin markers\n            try {\n                if (typeof this.originMarker !== 'undefined') {\n                    google.maps.event.clearListeners(this.originMarker, 'click');\n                    if (this.markerOptions.origin.draggable) {\n                        google.maps.event.clearListeners(this.originMarker, 'dragend');\n                    }\n                }\n                if (typeof this.destinationMarker !== 'undefined') {\n                    google.maps.event.clearListeners(this.destinationMarker, 'click');\n                    if (this.markerOptions.origin.draggable) {\n                        google.maps.event.clearListeners(this.destinationMarker, 'dragend');\n                    }\n                }\n                this.waypointsMarker.forEach((w) => {\n                    if (typeof w !== 'undefined') {\n                        google.maps.event.clearListeners(w, 'click');\n                    }\n                });\n                this.removeMarkers();\n            }\n            catch (err) {\n                console.error('Can not reset custom marker.', err);\n            }\n        }\n    }\n    AgmDirection.ɵfac = function AgmDirection_Factory(t) { return new (t || AgmDirection)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdirectiveInject\"](_agm_core__WEBPACK_IMPORTED_MODULE_1__[/* GoogleMapsAPIWrapper */ \"d\"])); };\n    AgmDirection.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineDirective\"]({ type: AgmDirection, selectors: [[\"agm-direction\"]], inputs: { waypoints: \"waypoints\", optimizeWaypoints: \"optimizeWaypoints\", provideRouteAlternatives: \"provideRouteAlternatives\", avoidHighways: \"avoidHighways\", avoidTolls: \"avoidTolls\", avoidFerries: \"avoidFerries\", visible: \"visible\", renderRoute: \"renderRoute\", origin: \"origin\", destination: \"destination\", infoWindow: \"infoWindow\", travelMode: \"travelMode\", transitOptions: \"transitOptions\", drivingOptions: \"drivingOptions\", unitSystem: \"unitSystem\", renderOptions: \"renderOptions\", panel: \"panel\", markerOptions: \"markerOptions\" }, outputs: { onChange: \"onChange\", onResponse: \"onResponse\", sendInfoWindow: \"sendInfoWindow\", status: \"status\", originDrag: \"originDrag\", destinationDrag: \"destinationDrag\" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵNgOnChangesFeature\"]] });\n    return AgmDirection;\n})();\nlet AgmDirectionModule = /*@__PURE__*/ (() => {\n    class AgmDirectionModule {\n        static forRoot() {\n            return {\n                ngModule: AgmDirectionModule,\n            };\n        }\n        static forChild() {\n            return {\n                ngModule: AgmDirectionModule,\n            };\n        }\n    }\n    AgmDirectionModule.ɵfac = function AgmDirectionModule_Factory(t) { return new (t || AgmDirectionModule)(); };\n    AgmDirectionModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineNgModule\"]({ type: AgmDirectionModule });\n    AgmDirectionModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵdefineInjector\"]({});\n    return AgmDirectionModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵsetNgModuleScope\"](AgmDirectionModule, { declarations: [AgmDirection], exports: [AgmDirection] }); })();\n// Public classes.\n/**\n * Angular library starter\n * Build an Angular library compatible with AoT compilation & Tree shaking like an official package\n * Copyright Roberto Simonetti\n * MIT license\n * https://github.com/robisim74/angular-library-starter\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=agm-direction.js.map\n\n\n/***/ }),\n\n/***/ \"Zcj0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createButtonActiveGesture; });\n/* harmony import */ var _index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"wEJo\");\n/* harmony import */ var _haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"qULd\");\n/* harmony import */ var _index_34cb2743_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"KF81\");\n\n\n\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    Object(_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"f\"])(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    Object(_index_7a8b7a1c_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"f\"])(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return Object(_index_34cb2743_js__WEBPACK_IMPORTED_MODULE_2__[\"createGesture\"])({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, _haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__[\"a\"]),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, _haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__[\"b\"]),\n    onEnd: () => {\n      clearActiveButton(true);\n      Object(_haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_1__[/* h */ \"e\"])();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\n\n\n\n/***/ }),\n\n/***/ \"h3R7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPINNERS; });\nconst spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\n\n\n\n/***/ }),\n\n/***/ \"qULd\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return hapticSelectionStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return hapticSelectionChanged; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return hapticSelection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return hapticImpact; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return hapticSelectionEnd; });\nconst HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\n\n\n\n/***/ }),\n\n/***/ \"spDm\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return attachComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return detachComponent; });\n/* harmony import */ var _helpers_1457892a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"W6o/\");\n\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => Object(_helpers_1457892a_js__WEBPACK_IMPORTED_MODULE_0__[\"c\"])(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":null}