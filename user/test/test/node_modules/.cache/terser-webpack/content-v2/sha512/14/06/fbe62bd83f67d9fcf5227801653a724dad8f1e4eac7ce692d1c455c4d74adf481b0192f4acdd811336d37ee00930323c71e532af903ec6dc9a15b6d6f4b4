{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{\"99Un\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"HomePageModule\",function(){return home_module_HomePageModule});var environment_prod=__webpack_require__(\"cxbk\"),common=__webpack_require__(\"ofXK\"),fesm2015_forms=__webpack_require__(\"3Pt+\"),ionic_angular=__webpack_require__(\"TEn/\"),router=__webpack_require__(\"tyNb\"),ngx=__webpack_require__(\"h+qT\"),ngx_google_places_autocomplete_umd=__webpack_require__(\"7itd\"),api_service=__webpack_require__(\"H+bZ\"),util_service=__webpack_require__(\"2Rin\"),_ivy_ngcc_ngx=__webpack_require__(\"Bfh1\"),diagnostic_ivy_ngcc_ngx=__webpack_require__(\"mtRb\"),location_accuracy_ivy_ngcc_ngx=__webpack_require__(\"92l+\"),android_permissions_ivy_ngcc_ngx=__webpack_require__(\"WOgW\"),core=__webpack_require__(\"fXoL\"),agm_core=__webpack_require__(\"pxUr\");const _c0=[\"placesRef\"],_c1=[\"search\"];function HomePage_div_17_Template(rf,ctx){if(1&rf){const _r4=core[\"ɵɵgetCurrentView\"]();core[\"ɵɵelementStart\"](0,\"div\",13),core[\"ɵɵlistener\"](\"click\",function(){core[\"ɵɵrestoreView\"](_r4);const item_r2=ctx.$implicit;return core[\"ɵɵnextContext\"]().getData(item_r2)}),core[\"ɵɵelement\"](1,\"img\",14),core[\"ɵɵelementStart\"](2,\"p\",15),core[\"ɵɵtext\"](3),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementEnd\"]()}if(2&rf){const item_r2=ctx.$implicit,ctx_r1=core[\"ɵɵnextContext\"]();core[\"ɵɵclassProp\"](\"active\",ctx_r1.select==item_r2.name),core[\"ɵɵadvance\"](1),core[\"ɵɵpropertyInterpolate\"](\"src\",null==item_r2?null:item_r2.imageUri,core[\"ɵɵsanitizeUrl\"]),core[\"ɵɵadvance\"](2),core[\"ɵɵtextInterpolate\"](null==item_r2?null:item_r2.name)}}const routes=[{path:\"\",component:(()=>{class HomePage{constructor(nav,menu,util,api,nativeGeocoder,geolocation,diagnostic,alertCtrl,androidPermissions,locationAccuracy){this.nav=nav,this.menu=menu,this.util=util,this.api=api,this.nativeGeocoder=nativeGeocoder,this.geolocation=geolocation,this.diagnostic=diagnostic,this.alertCtrl=alertCtrl,this.androidPermissions=androidPermissions,this.locationAccuracy=locationAccuracy,this.Centerlat=22.298922,this.Centerlng=70.802177,this.petrol=1,this.diesel=1,this.gas=1,this.isshow=!1,this.origin={},this.destination={},this.providerArray=[],this.icon=\"../../../assets/image/sender_ic.png\",this.iconUrl=\"../../../assets/image/sender_ic.png\",this.renderOptions={suppressMarkers:!0,draggable:!1},this.styles=[{elementType:\"geometry\",stylers:[{color:\"#f5f5f5\"}]},{elementType:\"labels.icon\",stylers:[{visibility:\"off\"}]},{elementType:\"labels.text.fill\",stylers:[{color:\"#616161\"}]},{elementType:\"labels.text.stroke\",stylers:[{color:\"#f5f5f5\"}]},{featureType:\"administrative.land_parcel\",elementType:\"labels.text.fill\",stylers:[{color:\"#bdbdbd\"}]},{featureType:\"poi\",elementType:\"geometry\",stylers:[{color:\"#eeeeee\"}]},{featureType:\"poi\",elementType:\"labels.text.fill\",stylers:[{color:\"#757575\"}]},{featureType:\"poi.park\",elementType:\"geometry\",stylers:[{color:\"#e5e5e5\"}]},{featureType:\"poi.park\",elementType:\"labels.text.fill\",stylers:[{color:\"#9e9e9e\"}]},{featureType:\"road\",elementType:\"geometry\",stylers:[{color:\"#ffffff\"}]},{featureType:\"road.arterial\",elementType:\"labels.text.fill\",stylers:[{color:\"#757575\"}]},{featureType:\"road.highway\",elementType:\"geometry\",stylers:[{color:\"#dadada\"}]},{featureType:\"road.highway\",elementType:\"labels.text.fill\",stylers:[{color:\"#616161\"}]},{featureType:\"road.local\",elementType:\"labels.text.fill\",stylers:[{color:\"#9e9e9e\"}]},{featureType:\"transit.line\",elementType:\"geometry\",stylers:[{color:\"#e5e5e5\"}]},{featureType:\"transit.station\",elementType:\"geometry\",stylers:[{color:\"#eeeeee\"}]},{featureType:\"water\",elementType:\"geometry\",stylers:[{color:\"#c9c9c9\"}]},{featureType:\"water\",elementType:\"labels.text.fill\",stylers:[{color:\"#9e9e9e\"}]}],this.select=\"\",this.provider=[],this.geoencoderOptions={useLocale:!0,maxResults:5},this.locationData={},setTimeout(()=>{this.diagnostic.isLocationEnabled().then(isAvailable=>{0==isAvailable&&this.requestToSwitchOnGPS()}).catch(e=>{console.log(e),alert(JSON.stringify(e))})},5e3),this.locationCoords={latitude:\"\",longitude:\"\",accuracy:\"\",timestamp:\"\"},this.menu.enable(!0),setTimeout(()=>{this.getLocationCoordinates(),this.util.dismissLoading()},3e3)}requestToSwitchOnGPS(){this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(res=>{console.log(\"ask gps opermission\",res),this.getLocationCoordinates()},error=>alert(JSON.stringify(error)))}gasPump(){this.isshow=!0,this.isshow&&1==this.gas&&0==this.petrol&&0==this.diesel&&this.nav.navigateForward(\"pick-detail\")}getData(item){this.util.dismissLoading(),this.select=item.name,this.api.select_fuel=this.select;let temp=[];this.providerArray.push(item,this.provider),this.provider.forEach(element=>{let isPush=!1;item.sub_fuel_type.forEach(sbt=>{element.fuel_type.includes(sbt.id)&&!isPush&&(temp.push(element),isPush=!0)})}),0==item.sub_fuel_type.length?this.util.presentToast(\"No Fuel available! \"):(localStorage.setItem(\"pro_id\",item.id),this.util.dismissLoading(),this.nav.navigateForward(\"pick-detail\"))}checkGPSPermission(){this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION).then(result=>{result.hasPermission?this.askToTurnOnGPS():this.requestGPSPermission()},err=>{})}requestGPSPermission(){this.locationAccuracy.canRequest().then(canRequest=>{canRequest?console.log(\"4\"):this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION).then(()=>{this.askToTurnOnGPS()},error=>{alert(\"requestPermission Error requesting location permissions \"+error)})})}askToTurnOnGPS(){this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(()=>{this.getLocationCoordinates()},error=>alert(\"Error requesting location permissions \"+JSON.stringify(error)))}ngOnInit(){}get(){this.util.dismissLoading(),this.getGeoencoder(this.latitude,this.longitude),localStorage.setItem(\"curentLat\",JSON.stringify(this.latitude)),localStorage.setItem(\"curentLang\",JSON.stringify(this.longitude)),localStorage.setItem(\"proLattt\",JSON.stringify(this.latitude)),localStorage.setItem(\"proLangg\",JSON.stringify(this.longitude)),localStorage.setItem(\"lat\",JSON.stringify(this.latitude)),localStorage.setItem(\"lang\",JSON.stringify(this.longitude)),this.api.lat=this.latitude,this.api.long=this.longitude;let data={lat:this.latitude,lang:this.longitude,radius:100};this.util.presentLoading(),this.api.postData(\"home\",data).subscribe(success=>{this.util.dismissLoading(),success.success&&(this.data=success.data,this.provider=success.data.provider,this.select=success.data.fuel_type[1].name)},err=>{this.util.dismissLoading()}),this.zoom=8,this.util.dismissLoading()}ionViewWillEnter(){}getDatas(lat,long){const fd=new FormData;this.util.dismissLoading(),fd.append(\"lat\",lat),fd.append(\"lang\",long),fd.append(\"radius\",\"1000\"),this.api.postData(\"home\",fd).subscribe(success=>{this.util.dismissLoading(),success.success&&(this.data=success.data,this.provider=success.data.provider,this.select=success.data.fuel_type[1].name)},err=>{this.util.dismissLoading()})}handleAddressChange(address){this.util.dismissLoading(),this.latitude=address.geometry.location.lat(),this.longitude=address.geometry.location.lng(),this.getGeoencoder(this.latitude,this.longitude),localStorage.setItem(\"curentLat\",JSON.stringify(this.latitude)),localStorage.setItem(\"curentLang\",JSON.stringify(this.longitude)),localStorage.setItem(\"proLattt\",JSON.stringify(this.latitude)),localStorage.setItem(\"proLangg\",JSON.stringify(this.longitude)),localStorage.setItem(\"lat\",JSON.stringify(this.latitude)),localStorage.setItem(\"lang\",JSON.stringify(this.longitude)),localStorage.setItem(\"addressOfLast\",address.formatted_address),localStorage.setItem(\"lat\",JSON.stringify(this.latitude)),localStorage.setItem(\"lang\",JSON.stringify(this.longitude)),this.util.dismissLoading()}getLocationCoordinates(){this.util.presentLoading(),this.geolocation.getCurrentPosition().then(resp=>{this.util.dismissLoading(),this.locationCoords.latitude=resp.coords.latitude,this.locationCoords.longitude=resp.coords.longitude,this.locationCoords.accuracy=resp.coords.accuracy,this.locationCoords.timestamp=resp.timestamp,this.getGeoencoder(this.latitude,this.longitude),localStorage.setItem(\"curentLat\",JSON.stringify(this.locationCoords.latitude)),localStorage.setItem(\"curentLang\",JSON.stringify(this.locationCoords.longitude)),localStorage.setItem(\"proLattt\",JSON.stringify(this.locationCoords.latitude)),localStorage.setItem(\"proLangg\",JSON.stringify(this.locationCoords.longitude)),localStorage.setItem(\"lat\",JSON.stringify(this.locationCoords.latitude)),localStorage.setItem(\"lang\",JSON.stringify(this.locationCoords.longitude)),this.latitude=JSON.parse(this.locationCoords.latitude),this.longitude=JSON.parse(this.locationCoords.longitude),this.getDatas(this.locationCoords.latitude,this.locationCoords.longitude),this.api.lat=this.latitude,this.api.long=this.longitude,this.util.dismissLoading()}).catch(error=>{this.util.dismissLoading(),alert(\"Error getting location\"+error)})}getGeoencoder(latitude,longitude){this.nativeGeocoder.reverseGeocode(latitude,longitude,this.geoencoderOptions).then(result=>{this.util.dismissLoading(),this.address=this.generateAddress(result[0]),localStorage.setItem(\"addressOfLast\",this.address),localStorage.setItem(\"gene\",this.address)}).catch(error=>{this.util.dismissLoading()})}generateAddress(addressObj){this.util.dismissLoading();let obj=[],address=\"\";for(let key in addressObj)obj.push(addressObj[key]);obj.reverse();for(let val in obj)obj[val].length&&(address+=obj[val]+\", \");return address.slice(0,-2)}getPointFromLongLat(long,lat){return this.util.dismissLoading(),ol.proj.transform([long,lat],\"EPSG:4326\",\"EPSG:3857\")}markerDragEnd(event){this.latitude=event.lat,this.util.dismissLoading()}}return HomePage.ɵfac=function(t){return new(t||HomePage)(core[\"ɵɵdirectiveInject\"](ionic_angular.Q),core[\"ɵɵdirectiveInject\"](ionic_angular.O),core[\"ɵɵdirectiveInject\"](util_service.a),core[\"ɵɵdirectiveInject\"](api_service.a),core[\"ɵɵdirectiveInject\"](ngx.a),core[\"ɵɵdirectiveInject\"](_ivy_ngcc_ngx.a),core[\"ɵɵdirectiveInject\"](diagnostic_ivy_ngcc_ngx.a),core[\"ɵɵdirectiveInject\"](ionic_angular.b),core[\"ɵɵdirectiveInject\"](android_permissions_ivy_ngcc_ngx.a),core[\"ɵɵdirectiveInject\"](location_accuracy_ivy_ngcc_ngx.a))},HomePage.ɵcmp=core[\"ɵɵdefineComponent\"]({type:HomePage,selectors:[[\"app-home\"]],viewQuery:function(rf,ctx){if(1&rf&&(core[\"ɵɵviewQuery\"](_c0,1),core[\"ɵɵviewQuery\"](_c1,1)),2&rf){let _t;core[\"ɵɵqueryRefresh\"](_t=core[\"ɵɵloadQuery\"]())&&(ctx.placesRef=_t.first),core[\"ɵɵqueryRefresh\"](_t=core[\"ɵɵloadQuery\"]())&&(ctx.searchElementRef=_t.first)}},decls:18,vars:9,consts:[[1,\"ion-no-border\"],[\"mode\",\"md\"],[\"slot\",\"start\"],[3,\"styles\",\"latitude\",\"longitude\",\"disableDefaultUI\"],[3,\"latitude\",\"longitude\",\"iconUrl\"],[1,\"location_div\"],[1,\"loc_lbl\"],[1,\"input_div\"],[\"src\",\"../../../assets/image_icon/location.svg\"],[\"autofocus\",\"true\",\"ngx-google-places-autocomplete\",\"\",3,\"value\",\"onAddressChange\"],[\"placesref\",\"ngx-places\"],[1,\"fule_type\"],[\"class\",\"fule\",3,\"active\",\"click\",4,\"ngFor\",\"ngForOf\"],[1,\"fule\",3,\"click\"],[\"alt\",\"\",\"srcset\",\"\",3,\"src\"],[1,\"fule_lbl\"]],template:function(rf,ctx){1&rf&&(core[\"ɵɵelementStart\"](0,\"ion-header\",0),core[\"ɵɵelementStart\"](1,\"ion-toolbar\",1),core[\"ɵɵelementStart\"](2,\"ion-buttons\",2),core[\"ɵɵelement\"](3,\"ion-menu-button\"),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementStart\"](4,\"ion-title\"),core[\"ɵɵtext\"](5,\"Lofuel\"),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementStart\"](6,\"ion-content\"),core[\"ɵɵelementStart\"](7,\"agm-map\",3),core[\"ɵɵelement\"](8,\"agm-marker\",4),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementStart\"](9,\"div\",5),core[\"ɵɵelementStart\"](10,\"h3\",6),core[\"ɵɵtext\"](11,\"Delivery Location\"),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementStart\"](12,\"div\",7),core[\"ɵɵelement\"](13,\"ion-icon\",8),core[\"ɵɵelementStart\"](14,\"input\",9,10),core[\"ɵɵlistener\"](\"onAddressChange\",function($event){return ctx.handleAddressChange($event)}),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementStart\"](16,\"div\",11),core[\"ɵɵtemplate\"](17,HomePage_div_17_Template,4,4,\"div\",12),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementEnd\"]()),2&rf&&(core[\"ɵɵadvance\"](7),core[\"ɵɵproperty\"](\"styles\",ctx.styles)(\"latitude\",ctx.latitude)(\"longitude\",ctx.longitude)(\"disableDefaultUI\",!0),core[\"ɵɵadvance\"](1),core[\"ɵɵproperty\"](\"latitude\",ctx.latitude)(\"longitude\",ctx.longitude)(\"iconUrl\",ctx.iconUrl),core[\"ɵɵadvance\"](6),core[\"ɵɵpropertyInterpolate\"](\"value\",ctx.address),core[\"ɵɵadvance\"](3),core[\"ɵɵproperty\"](\"ngForOf\",null==ctx.data?null:ctx.data.fuel_type))},directives:[ionic_angular.p,ionic_angular.K,ionic_angular.h,ionic_angular.w,ionic_angular.I,ionic_angular.k,agm_core.b,agm_core.c,ionic_angular.q,ngx_google_places_autocomplete_umd.GooglePlaceDirective,common.k],styles:[\"ion-content[_ngcontent-%COMP%]   .fule_type[_ngcontent-%COMP%]{height:128px;background-color:var(--white);border-radius:20px 20px 0 0;box-shadow:0 -1px 6px 0 rgba(0,0,0,.16);width:100%;position:absolute;bottom:0;display:flex;align-items:center;justify-content:space-around}ion-content[_ngcontent-%COMP%]   .fule_type[_ngcontent-%COMP%]   .fule[_ngcontent-%COMP%]{text-align:center;opacity:.5}ion-content[_ngcontent-%COMP%]   .fule_type[_ngcontent-%COMP%]   .fule[_ngcontent-%COMP%]   .fule_lbl[_ngcontent-%COMP%]{font-size:18px;font-family:rubik_md;color:var(--my_theme);margin-bottom:0;margin-top:5px}ion-content[_ngcontent-%COMP%]   .fule_type[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]{opacity:1}ion-content[_ngcontent-%COMP%]   .map[_ngcontent-%COMP%]{height:100%;width:100%}ion-content[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background:transparent;border:none;font-family:rubik_r;margin-left:10px;color:#fff}ion-content[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none}\"]}),HomePage})()}];let home_routing_module_HomePageRoutingModule=(()=>{class HomePageRoutingModule{}return HomePageRoutingModule.ɵfac=function(t){return new(t||HomePageRoutingModule)},HomePageRoutingModule.ɵmod=core[\"ɵɵdefineNgModule\"]({type:HomePageRoutingModule}),HomePageRoutingModule.ɵinj=core[\"ɵɵdefineInjector\"]({imports:[[router.i.forChild(routes)],router.i]}),HomePageRoutingModule})();var agm_direction=__webpack_require__(\"IZFd\");let home_module_HomePageModule=(()=>{class HomePageModule{}return HomePageModule.ɵfac=function(t){return new(t||HomePageModule)},HomePageModule.ɵmod=core[\"ɵɵdefineNgModule\"]({type:HomePageModule}),HomePageModule.ɵinj=core[\"ɵɵdefineInjector\"]({imports:[[common.b,fesm2015_forms.a,ionic_angular.L,agm_core.a.forRoot({apiKey:environment_prod.a.google_map_key}),agm_direction.b,home_routing_module_HomePageRoutingModule,ngx_google_places_autocomplete_umd.GooglePlaceModule]]}),HomePageModule})()}}]);","name":"22-es2015.2354bba3bed5cbbe696b.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[22],{\n\n/***/ \"99Un\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"HomePageModule\", function() { return /* binding */ home_module_HomePageModule; });\n\n// EXTERNAL MODULE: ./src/environments/environment.prod.ts\nvar environment_prod = __webpack_require__(\"cxbk\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js + 1 modules\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js + 5 modules\nvar ionic_angular = __webpack_require__(\"TEn/\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 13 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic-native/native-geocoder/__ivy_ngcc__/ngx/index.js\nvar ngx = __webpack_require__(\"h+qT\");\n\n// EXTERNAL MODULE: ./node_modules/ngx-google-places-autocomplete/__ivy_ngcc__/bundles/ngx-google-places-autocomplete.umd.js\nvar ngx_google_places_autocomplete_umd = __webpack_require__(\"7itd\");\n\n// EXTERNAL MODULE: ./src/app/services/api.service.ts\nvar api_service = __webpack_require__(\"H+bZ\");\n\n// EXTERNAL MODULE: ./src/app/services/util.service.ts\nvar util_service = __webpack_require__(\"2Rin\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic-native/geolocation/__ivy_ngcc__/ngx/index.js\nvar _ivy_ngcc_ngx = __webpack_require__(\"Bfh1\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic-native/diagnostic/__ivy_ngcc__/ngx/index.js\nvar diagnostic_ivy_ngcc_ngx = __webpack_require__(\"mtRb\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic-native/location-accuracy/__ivy_ngcc__/ngx/index.js\nvar location_accuracy_ivy_ngcc_ngx = __webpack_require__(\"92l+\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic-native/android-permissions/__ivy_ngcc__/ngx/index.js\nvar android_permissions_ivy_ngcc_ngx = __webpack_require__(\"WOgW\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js + 1 modules\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@agm/core/__ivy_ngcc__/fesm2015/agm-core.js + 14 modules\nvar agm_core = __webpack_require__(\"pxUr\");\n\n// CONCATENATED MODULE: ./src/app/pages/home/home.page.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst _c0 = [\"placesRef\"];\r\nconst _c1 = [\"search\"];\r\nfunction HomePage_div_17_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r4 = core[\"ɵɵgetCurrentView\"]();\r\n        core[\"ɵɵelementStart\"](0, \"div\", 13);\r\n        core[\"ɵɵlistener\"](\"click\", function HomePage_div_17_Template_div_click_0_listener() { core[\"ɵɵrestoreView\"](_r4); const item_r2 = ctx.$implicit; const ctx_r3 = core[\"ɵɵnextContext\"](); return ctx_r3.getData(item_r2); });\r\n        core[\"ɵɵelement\"](1, \"img\", 14);\r\n        core[\"ɵɵelementStart\"](2, \"p\", 15);\r\n        core[\"ɵɵtext\"](3);\r\n        core[\"ɵɵelementEnd\"]();\r\n        core[\"ɵɵelementEnd\"]();\r\n    }\r\n    if (rf & 2) {\r\n        const item_r2 = ctx.$implicit;\r\n        const ctx_r1 = core[\"ɵɵnextContext\"]();\r\n        core[\"ɵɵclassProp\"](\"active\", ctx_r1.select == item_r2.name);\r\n        core[\"ɵɵadvance\"](1);\r\n        core[\"ɵɵpropertyInterpolate\"](\"src\", item_r2 == null ? null : item_r2.imageUri, core[\"ɵɵsanitizeUrl\"]);\r\n        core[\"ɵɵadvance\"](2);\r\n        core[\"ɵɵtextInterpolate\"](item_r2 == null ? null : item_r2.name);\r\n    }\r\n}\r\nlet home_page_HomePage = /*@__PURE__*/ (() => {\r\n    class HomePage {\r\n        constructor(nav, menu, util, api, nativeGeocoder, geolocation, diagnostic, alertCtrl, androidPermissions, locationAccuracy) {\r\n            this.nav = nav;\r\n            this.menu = menu;\r\n            this.util = util;\r\n            this.api = api;\r\n            this.nativeGeocoder = nativeGeocoder;\r\n            this.geolocation = geolocation;\r\n            this.diagnostic = diagnostic;\r\n            this.alertCtrl = alertCtrl;\r\n            this.androidPermissions = androidPermissions;\r\n            this.locationAccuracy = locationAccuracy;\r\n            this.Centerlat = 22.298922;\r\n            this.Centerlng = 70.802177;\r\n            this.petrol = 1;\r\n            this.diesel = 1;\r\n            this.gas = 1;\r\n            this.isshow = false;\r\n            this.origin = {};\r\n            this.destination = {};\r\n            this.providerArray = [];\r\n            this.icon = \"../../../assets/image/sender_ic.png\";\r\n            this.iconUrl = \"../../../assets/image/sender_ic.png\";\r\n            this.renderOptions = {\r\n                suppressMarkers: true,\r\n                draggable: false,\r\n            };\r\n            this.styles = [\r\n                {\r\n                    elementType: \"geometry\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#f5f5f5\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    elementType: \"labels.icon\",\r\n                    stylers: [\r\n                        {\r\n                            visibility: \"off\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    elementType: \"labels.text.fill\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#616161\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    elementType: \"labels.text.stroke\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#f5f5f5\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"administrative.land_parcel\",\r\n                    elementType: \"labels.text.fill\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#bdbdbd\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"poi\",\r\n                    elementType: \"geometry\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#eeeeee\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"poi\",\r\n                    elementType: \"labels.text.fill\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#757575\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"poi.park\",\r\n                    elementType: \"geometry\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#e5e5e5\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"poi.park\",\r\n                    elementType: \"labels.text.fill\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#9e9e9e\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"road\",\r\n                    elementType: \"geometry\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#ffffff\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"road.arterial\",\r\n                    elementType: \"labels.text.fill\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#757575\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"road.highway\",\r\n                    elementType: \"geometry\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#dadada\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"road.highway\",\r\n                    elementType: \"labels.text.fill\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#616161\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"road.local\",\r\n                    elementType: \"labels.text.fill\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#9e9e9e\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"transit.line\",\r\n                    elementType: \"geometry\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#e5e5e5\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"transit.station\",\r\n                    elementType: \"geometry\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#eeeeee\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"water\",\r\n                    elementType: \"geometry\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#c9c9c9\",\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    featureType: \"water\",\r\n                    elementType: \"labels.text.fill\",\r\n                    stylers: [\r\n                        {\r\n                            color: \"#9e9e9e\",\r\n                        },\r\n                    ],\r\n                },\r\n            ];\r\n            this.select = \"\";\r\n            this.provider = [];\r\n            this.geoencoderOptions = {\r\n                useLocale: true,\r\n                maxResults: 5,\r\n            };\r\n            this.locationData = {};\r\n            setTimeout(() => {\r\n                this.diagnostic\r\n                    .isLocationEnabled()\r\n                    .then((isAvailable) => {\r\n                    // console.log(\"Is available? \" + isAvailable);\r\n                    // alert(\"Is available? \" + isAvailable); \r\n                    if (isAvailable == false) {\r\n                        this.requestToSwitchOnGPS();\r\n                    }\r\n                })\r\n                    .catch((e) => {\r\n                    console.log(e);\r\n                    alert(JSON.stringify(e));\r\n                });\r\n            }, 5000);\r\n            this.locationCoords = {\r\n                latitude: \"\",\r\n                longitude: \"\",\r\n                accuracy: \"\",\r\n                timestamp: \"\",\r\n            };\r\n            this.menu.enable(true);\r\n            setTimeout(() => {\r\n                this.getLocationCoordinates();\r\n                this.util.dismissLoading();\r\n            }, 3000);\r\n        }\r\n        requestToSwitchOnGPS() {\r\n            this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then((res) => {\r\n                console.log('ask gps opermission', res);\r\n                this.getLocationCoordinates();\r\n            }, error => alert(JSON.stringify(error)));\r\n        }\r\n        gasPump() {\r\n            this.isshow = true;\r\n            if (this.isshow && this.gas == 1 && this.petrol == 0 && this.diesel == 0) {\r\n                this.nav.navigateForward(\"pick-detail\");\r\n            }\r\n        }\r\n        getData(item) {\r\n            this.util.dismissLoading();\r\n            this.select = item.name;\r\n            this.api.select_fuel = this.select;\r\n            let temp = [];\r\n            this.providerArray.push(item, this.provider);\r\n            this.provider.forEach((element) => {\r\n                let isPush = false;\r\n                item.sub_fuel_type.forEach((sbt) => {\r\n                    if (element.fuel_type.includes(sbt.id) && !isPush) {\r\n                        temp.push(element);\r\n                        isPush = true;\r\n                    }\r\n                });\r\n            });\r\n            if (item.sub_fuel_type.length == 0) {\r\n                this.util.presentToast(\"No Fuel available! \");\r\n            }\r\n            else {\r\n                localStorage.setItem(\"pro_id\", item.id);\r\n                this.util.dismissLoading();\r\n                this.nav.navigateForward(\"pick-detail\");\r\n            }\r\n        }\r\n        checkGPSPermission() {\r\n            this.androidPermissions\r\n                .checkPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION)\r\n                .then((result) => {\r\n                if (result.hasPermission) {\r\n                    //If having permission show 'Turn On GPS' dialogue\r\n                    this.askToTurnOnGPS();\r\n                }\r\n                else {\r\n                    //If not having permission ask for permission\r\n                    this.requestGPSPermission();\r\n                }\r\n            }, (err) => {\r\n                //alert(err);\r\n            });\r\n        }\r\n        requestGPSPermission() {\r\n            this.locationAccuracy.canRequest().then((canRequest) => {\r\n                if (canRequest) {\r\n                    console.log(\"4\");\r\n                }\r\n                else {\r\n                    //Show 'GPS Permission Request' dialogue\r\n                    this.androidPermissions\r\n                        .requestPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION)\r\n                        .then(() => {\r\n                        // call method to turn on GPS\r\n                        this.askToTurnOnGPS();\r\n                    }, (error) => {\r\n                        //Show alert if user click on 'No Thanks'\r\n                        alert(\"requestPermission Error requesting location permissions \" +\r\n                            error);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        askToTurnOnGPS() {\r\n            this.locationAccuracy\r\n                .request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY)\r\n                .then(() => {\r\n                // When GPS Turned ON call method to get Accurate location coordinates\r\n                this.getLocationCoordinates();\r\n            }, (error) => alert(\"Error requesting location permissions \" + JSON.stringify(error)));\r\n        }\r\n        ngOnInit() { }\r\n        get() {\r\n            this.util.dismissLoading();\r\n            this.getGeoencoder(this.latitude, this.longitude);\r\n            localStorage.setItem(\"curentLat\", JSON.stringify(this.latitude));\r\n            localStorage.setItem(\"curentLang\", JSON.stringify(this.longitude));\r\n            localStorage.setItem(\"proLattt\", JSON.stringify(this.latitude));\r\n            localStorage.setItem(\"proLangg\", JSON.stringify(this.longitude));\r\n            localStorage.setItem(\"lat\", JSON.stringify(this.latitude));\r\n            localStorage.setItem(\"lang\", JSON.stringify(this.longitude));\r\n            this.api.lat = this.latitude;\r\n            this.api.long = this.longitude;\r\n            let data = {\r\n                lat: this.latitude,\r\n                lang: this.longitude,\r\n                radius: 100,\r\n            };\r\n            this.util.presentLoading();\r\n            this.api.postData(\"home\", data).subscribe((success) => {\r\n                this.util.dismissLoading();\r\n                if (success.success) {\r\n                    this.data = success.data;\r\n                    this.provider = success.data.provider;\r\n                    this.select = success.data.fuel_type[1].name;\r\n                }\r\n            }, (err) => {\r\n                this.util.dismissLoading();\r\n            });\r\n            this.zoom = 8;\r\n            this.util.dismissLoading();\r\n        }\r\n        ionViewWillEnter() { }\r\n        getDatas(lat, long) {\r\n            const fd = new FormData();\r\n            this.util.dismissLoading();\r\n            fd.append(\"lat\", lat);\r\n            fd.append(\"lang\", long);\r\n            fd.append(\"radius\", \"1000\");\r\n            this.api.postData(\"home\", fd).subscribe((success) => {\r\n                this.util.dismissLoading();\r\n                if (success.success) {\r\n                    this.data = success.data;\r\n                    this.provider = success.data.provider;\r\n                    this.select = success.data.fuel_type[1].name;\r\n                }\r\n            }, (err) => {\r\n                this.util.dismissLoading();\r\n            });\r\n        }\r\n        handleAddressChange(address) {\r\n            this.util.dismissLoading();\r\n            this.latitude = address.geometry.location.lat();\r\n            this.longitude = address.geometry.location.lng();\r\n            this.getGeoencoder(this.latitude, this.longitude);\r\n            localStorage.setItem(\"curentLat\", JSON.stringify(this.latitude));\r\n            localStorage.setItem(\"curentLang\", JSON.stringify(this.longitude));\r\n            localStorage.setItem(\"proLattt\", JSON.stringify(this.latitude));\r\n            localStorage.setItem(\"proLangg\", JSON.stringify(this.longitude));\r\n            localStorage.setItem(\"lat\", JSON.stringify(this.latitude));\r\n            localStorage.setItem(\"lang\", JSON.stringify(this.longitude));\r\n            let dataOfAddress = {\r\n                name: address.name,\r\n                address: address.formatted_address,\r\n            };\r\n            localStorage.setItem(\"addressOfLast\", dataOfAddress.address);\r\n            localStorage.setItem(\"lat\", JSON.stringify(this.latitude));\r\n            localStorage.setItem(\"lang\", JSON.stringify(this.longitude));\r\n            this.util.dismissLoading();\r\n        }\r\n        getLocationCoordinates() {\r\n            this.util.presentLoading();\r\n            this.geolocation\r\n                .getCurrentPosition()\r\n                .then((resp) => {\r\n                this.util.dismissLoading();\r\n                this.locationCoords.latitude = resp.coords.latitude;\r\n                this.locationCoords.longitude = resp.coords.longitude;\r\n                this.locationCoords.accuracy = resp.coords.accuracy;\r\n                this.locationCoords.timestamp = resp.timestamp;\r\n                this.getGeoencoder(this.latitude, this.longitude);\r\n                localStorage.setItem(\"curentLat\", JSON.stringify(this.locationCoords.latitude));\r\n                localStorage.setItem(\"curentLang\", JSON.stringify(this.locationCoords.longitude));\r\n                localStorage.setItem(\"proLattt\", JSON.stringify(this.locationCoords.latitude));\r\n                localStorage.setItem(\"proLangg\", JSON.stringify(this.locationCoords.longitude));\r\n                localStorage.setItem(\"lat\", JSON.stringify(this.locationCoords.latitude));\r\n                localStorage.setItem(\"lang\", JSON.stringify(this.locationCoords.longitude));\r\n                this.latitude = JSON.parse(this.locationCoords.latitude);\r\n                this.longitude = JSON.parse(this.locationCoords.longitude);\r\n                this.getDatas(this.locationCoords.latitude, this.locationCoords.longitude);\r\n                this.api.lat = this.latitude;\r\n                this.api.long = this.longitude;\r\n                this.util.dismissLoading();\r\n            })\r\n                .catch((error) => {\r\n                this.util.dismissLoading();\r\n                alert(\"Error getting location\" + error);\r\n            });\r\n        }\r\n        getGeoencoder(latitude, longitude) {\r\n            this.nativeGeocoder\r\n                .reverseGeocode(latitude, longitude, this.geoencoderOptions)\r\n                .then((result) => {\r\n                this.util.dismissLoading();\r\n                this.address = this.generateAddress(result[0]);\r\n                localStorage.setItem(\"addressOfLast\", this.address);\r\n                localStorage.setItem(\"gene\", this.address);\r\n            })\r\n                .catch((error) => {\r\n                this.util.dismissLoading();\r\n            });\r\n        }\r\n        //Return Comma saperated address\r\n        generateAddress(addressObj) {\r\n            this.util.dismissLoading();\r\n            let obj = [];\r\n            let address = \"\";\r\n            for (let key in addressObj) {\r\n                obj.push(addressObj[key]);\r\n            }\r\n            obj.reverse();\r\n            for (let val in obj) {\r\n                if (obj[val].length)\r\n                    address += obj[val] + \", \";\r\n            }\r\n            return address.slice(0, -2);\r\n        }\r\n        getPointFromLongLat(long, lat) {\r\n            this.util.dismissLoading();\r\n            return ol.proj.transform([long, lat], \"EPSG:4326\", \"EPSG:3857\");\r\n        }\r\n        markerDragEnd(event) {\r\n            this.latitude = event.lat;\r\n            this.util.dismissLoading();\r\n        }\r\n    }\r\n    HomePage.ɵfac = function HomePage_Factory(t) { return new (t || HomePage)(core[\"ɵɵdirectiveInject\"](ionic_angular[\"Q\" /* NavController */]), core[\"ɵɵdirectiveInject\"](ionic_angular[\"O\" /* MenuController */]), core[\"ɵɵdirectiveInject\"](util_service[\"a\" /* UtilService */]), core[\"ɵɵdirectiveInject\"](api_service[\"a\" /* ApiService */]), core[\"ɵɵdirectiveInject\"](ngx[\"a\" /* NativeGeocoder */]), core[\"ɵɵdirectiveInject\"](_ivy_ngcc_ngx[\"a\" /* Geolocation */]), core[\"ɵɵdirectiveInject\"](diagnostic_ivy_ngcc_ngx[\"a\" /* Diagnostic */]), core[\"ɵɵdirectiveInject\"](ionic_angular[\"b\" /* AlertController */]), core[\"ɵɵdirectiveInject\"](android_permissions_ivy_ngcc_ngx[\"a\" /* AndroidPermissions */]), core[\"ɵɵdirectiveInject\"](location_accuracy_ivy_ngcc_ngx[\"a\" /* LocationAccuracy */])); };\r\n    HomePage.ɵcmp = core[\"ɵɵdefineComponent\"]({ type: HomePage, selectors: [[\"app-home\"]], viewQuery: function HomePage_Query(rf, ctx) {\r\n            if (rf & 1) {\r\n                core[\"ɵɵviewQuery\"](_c0, 1);\r\n                core[\"ɵɵviewQuery\"](_c1, 1);\r\n            }\r\n            if (rf & 2) {\r\n                let _t;\r\n                core[\"ɵɵqueryRefresh\"](_t = core[\"ɵɵloadQuery\"]()) && (ctx.placesRef = _t.first);\r\n                core[\"ɵɵqueryRefresh\"](_t = core[\"ɵɵloadQuery\"]()) && (ctx.searchElementRef = _t.first);\r\n            }\r\n        }, decls: 18, vars: 9, consts: [[1, \"ion-no-border\"], [\"mode\", \"md\"], [\"slot\", \"start\"], [3, \"styles\", \"latitude\", \"longitude\", \"disableDefaultUI\"], [3, \"latitude\", \"longitude\", \"iconUrl\"], [1, \"location_div\"], [1, \"loc_lbl\"], [1, \"input_div\"], [\"src\", \"../../../assets/image_icon/location.svg\"], [\"autofocus\", \"true\", \"ngx-google-places-autocomplete\", \"\", 3, \"value\", \"onAddressChange\"], [\"placesref\", \"ngx-places\"], [1, \"fule_type\"], [\"class\", \"fule\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"fule\", 3, \"click\"], [\"alt\", \"\", \"srcset\", \"\", 3, \"src\"], [1, \"fule_lbl\"]], template: function HomePage_Template(rf, ctx) {\r\n            if (rf & 1) {\r\n                core[\"ɵɵelementStart\"](0, \"ion-header\", 0);\r\n                core[\"ɵɵelementStart\"](1, \"ion-toolbar\", 1);\r\n                core[\"ɵɵelementStart\"](2, \"ion-buttons\", 2);\r\n                core[\"ɵɵelement\"](3, \"ion-menu-button\");\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementStart\"](4, \"ion-title\");\r\n                core[\"ɵɵtext\"](5, \"Lofuel\");\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementStart\"](6, \"ion-content\");\r\n                core[\"ɵɵelementStart\"](7, \"agm-map\", 3);\r\n                core[\"ɵɵelement\"](8, \"agm-marker\", 4);\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementStart\"](9, \"div\", 5);\r\n                core[\"ɵɵelementStart\"](10, \"h3\", 6);\r\n                core[\"ɵɵtext\"](11, \"Delivery Location\");\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementStart\"](12, \"div\", 7);\r\n                core[\"ɵɵelement\"](13, \"ion-icon\", 8);\r\n                core[\"ɵɵelementStart\"](14, \"input\", 9, 10);\r\n                core[\"ɵɵlistener\"](\"onAddressChange\", function HomePage_Template_input_onAddressChange_14_listener($event) { return ctx.handleAddressChange($event); });\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementStart\"](16, \"div\", 11);\r\n                core[\"ɵɵtemplate\"](17, HomePage_div_17_Template, 4, 4, \"div\", 12);\r\n                core[\"ɵɵelementEnd\"]();\r\n                core[\"ɵɵelementEnd\"]();\r\n            }\r\n            if (rf & 2) {\r\n                core[\"ɵɵadvance\"](7);\r\n                core[\"ɵɵproperty\"](\"styles\", ctx.styles)(\"latitude\", ctx.latitude)(\"longitude\", ctx.longitude)(\"disableDefaultUI\", true);\r\n                core[\"ɵɵadvance\"](1);\r\n                core[\"ɵɵproperty\"](\"latitude\", ctx.latitude)(\"longitude\", ctx.longitude)(\"iconUrl\", ctx.iconUrl);\r\n                core[\"ɵɵadvance\"](6);\r\n                core[\"ɵɵpropertyInterpolate\"](\"value\", ctx.address);\r\n                core[\"ɵɵadvance\"](3);\r\n                core[\"ɵɵproperty\"](\"ngForOf\", ctx.data == null ? null : ctx.data.fuel_type);\r\n            }\r\n        }, directives: [ionic_angular[\"p\" /* IonHeader */], ionic_angular[\"K\" /* IonToolbar */], ionic_angular[\"h\" /* IonButtons */], ionic_angular[\"w\" /* IonMenuButton */], ionic_angular[\"I\" /* IonTitle */], ionic_angular[\"k\" /* IonContent */], agm_core[\"b\" /* AgmMap */], agm_core[\"c\" /* AgmMarker */], ionic_angular[\"q\" /* IonIcon */], ngx_google_places_autocomplete_umd[\"GooglePlaceDirective\"], common[\"k\" /* NgForOf */]], styles: [\"ion-content[_ngcontent-%COMP%]   .fule_type[_ngcontent-%COMP%]{height:128px;background-color:var(--white);border-radius:20px 20px 0 0;box-shadow:0 -1px 6px 0 rgba(0,0,0,.16);width:100%;position:absolute;bottom:0;display:flex;align-items:center;justify-content:space-around}ion-content[_ngcontent-%COMP%]   .fule_type[_ngcontent-%COMP%]   .fule[_ngcontent-%COMP%]{text-align:center;opacity:.5}ion-content[_ngcontent-%COMP%]   .fule_type[_ngcontent-%COMP%]   .fule[_ngcontent-%COMP%]   .fule_lbl[_ngcontent-%COMP%]{font-size:18px;font-family:rubik_md;color:var(--my_theme);margin-bottom:0;margin-top:5px}ion-content[_ngcontent-%COMP%]   .fule_type[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]{opacity:1}ion-content[_ngcontent-%COMP%]   .map[_ngcontent-%COMP%]{height:100%;width:100%}ion-content[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background:transparent;border:none;font-family:rubik_r;margin-left:10px;color:#fff}ion-content[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none}\"] });\r\n    return HomePage;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/pages/home/home-routing.module.ts\n\r\n\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path: '',\r\n        component: home_page_HomePage\r\n    }\r\n];\r\nlet home_routing_module_HomePageRoutingModule = /*@__PURE__*/ (() => {\r\n    class HomePageRoutingModule {\r\n    }\r\n    HomePageRoutingModule.ɵfac = function HomePageRoutingModule_Factory(t) { return new (t || HomePageRoutingModule)(); };\r\n    HomePageRoutingModule.ɵmod = core[\"ɵɵdefineNgModule\"]({ type: HomePageRoutingModule });\r\n    HomePageRoutingModule.ɵinj = core[\"ɵɵdefineInjector\"]({ imports: [[router[\"i\" /* RouterModule */].forChild(routes)], router[\"i\" /* RouterModule */]] });\r\n    return HomePageRoutingModule;\r\n})();\r\n\n// EXTERNAL MODULE: ./node_modules/agm-direction/__ivy_ngcc__/fesm2015/agm-direction.js\nvar agm_direction = __webpack_require__(\"IZFd\");\n\n// CONCATENATED MODULE: ./src/app/pages/home/home.module.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet home_module_HomePageModule = /*@__PURE__*/ (() => {\r\n    class HomePageModule {\r\n    }\r\n    HomePageModule.ɵfac = function HomePageModule_Factory(t) { return new (t || HomePageModule)(); };\r\n    HomePageModule.ɵmod = core[\"ɵɵdefineNgModule\"]({ type: HomePageModule });\r\n    HomePageModule.ɵinj = core[\"ɵɵdefineInjector\"]({ imports: [[\r\n                common[\"b\" /* CommonModule */],\r\n                fesm2015_forms[\"a\" /* FormsModule */],\r\n                ionic_angular[\"L\" /* IonicModule */],\r\n                agm_core[\"a\" /* AgmCoreModule */].forRoot({\r\n                    apiKey: environment_prod[\"a\" /* environment */].google_map_key,\r\n                }),\r\n                agm_direction[\"b\" /* AgmDirectionModule */],\r\n                home_routing_module_HomePageRoutingModule,\r\n                ngx_google_places_autocomplete_umd[\"GooglePlaceModule\"]\r\n            ]] });\r\n    return HomePageModule;\r\n})();\r\n\n\n/***/ })\n\n}]);","inputSourceMap":null}